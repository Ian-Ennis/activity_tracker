[{"/Users/Ian/Development/code/mod4/activity_tracker/client/src/index.js":"1","/Users/Ian/Development/code/mod4/activity_tracker/client/src/App.js":"2","/Users/Ian/Development/code/mod4/activity_tracker/client/src/reportWebVitals.js":"3","/Users/Ian/Development/code/mod4/activity_tracker/client/src/components/Header.js":"4","/Users/Ian/Development/code/mod4/activity_tracker/client/src/components/NavigationBar.js":"5","/Users/Ian/Development/code/mod4/activity_tracker/client/src/components/Resources.js":"6","/Users/Ian/Development/code/mod4/activity_tracker/client/src/components/Tables/YogaTable.js":"7","/Users/Ian/Development/code/mod4/activity_tracker/client/src/components/Tables/MeditationTable.js":"8","/Users/Ian/Development/code/mod4/activity_tracker/client/src/components/Tables/CardioTable.js":"9","/Users/Ian/Development/code/mod4/activity_tracker/client/src/components/Login/Login.js":"10","/Users/Ian/Development/code/mod4/activity_tracker/client/src/components/Charts/MeditationChart.js":"11","/Users/Ian/Development/code/mod4/activity_tracker/client/src/components/Login/Signup.js":"12","/Users/Ian/Development/code/mod4/activity_tracker/client/src/components/Charts/YogaChart.js":"13","/Users/Ian/Development/code/mod4/activity_tracker/client/src/components/Charts/CardioChart.js":"14","/Users/Ian/Development/code/mod4/activity_tracker/client/src/components/Activities.js":"15"},{"size":536,"mtime":1646410242450,"results":"16","hashOfConfig":"17"},{"size":1092,"mtime":1647657122067,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1646410242450,"results":"19","hashOfConfig":"17"},{"size":181,"mtime":1646410242449,"results":"20","hashOfConfig":"17"},{"size":852,"mtime":1647638175263,"results":"21","hashOfConfig":"17"},{"size":1920,"mtime":1647657791636,"results":"22","hashOfConfig":"17"},{"size":1165,"mtime":1648003017280,"results":"23","hashOfConfig":"17"},{"size":1134,"mtime":1648003011977,"results":"24","hashOfConfig":"17"},{"size":1231,"mtime":1648002981206,"results":"25","hashOfConfig":"17"},{"size":1903,"mtime":1647658509043,"results":"26","hashOfConfig":"17"},{"size":882,"mtime":1648003707984,"results":"27","hashOfConfig":"17"},{"size":2034,"mtime":1647658461856,"results":"28","hashOfConfig":"17"},{"size":834,"mtime":1647467681088,"results":"29","hashOfConfig":"17"},{"size":848,"mtime":1647467673556,"results":"30","hashOfConfig":"17"},{"size":10744,"mtime":1647658658604,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"5ziuo7",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},"/Users/Ian/Development/code/mod4/activity_tracker/client/src/index.js",[],["66","67"],"/Users/Ian/Development/code/mod4/activity_tracker/client/src/App.js",[],"/Users/Ian/Development/code/mod4/activity_tracker/client/src/reportWebVitals.js",[],"/Users/Ian/Development/code/mod4/activity_tracker/client/src/components/Header.js",[],"/Users/Ian/Development/code/mod4/activity_tracker/client/src/components/NavigationBar.js",[],"/Users/Ian/Development/code/mod4/activity_tracker/client/src/components/Resources.js",[],"/Users/Ian/Development/code/mod4/activity_tracker/client/src/components/Tables/YogaTable.js",[],"/Users/Ian/Development/code/mod4/activity_tracker/client/src/components/Tables/MeditationTable.js",[],"/Users/Ian/Development/code/mod4/activity_tracker/client/src/components/Tables/CardioTable.js",[],"/Users/Ian/Development/code/mod4/activity_tracker/client/src/components/Login/Login.js",["68"],"import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Login({ setLoggedIn, setCurrentUser }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password,\n      }),\n    }).then((r) => {\n      if (r.ok) {\n        r.json().then((data) => {\n          localStorage.setItem(\"token\", data.token);\n          setLoggedIn(true);\n          setCurrentUser(data)\n          setUsername(\"\");\n          setPassword(\"\");\n          navigate(\"/activities\");\n        });\n      } else {\n        r.json().then((err) => {\n          console.log(err);\n        });\n      }\n    });\n  }\n\n  return (\n      <div class=\"signup_login\">\n        <h5>Enter your login</h5>\n        <form className=\"signup_login_form\" onSubmit={handleSubmit}>\n          <div className=\"username\">\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"text\"\n              id=\"username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n          </div>\n          <div className=\"pass\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n          <button type=\"submit\">Login</button>\n        </form>\n        <button id=\"need_account\" onClick={() => navigate(\"/\")}>\n          Create new account\n        </button>\n      </div>\n  );\n}\n\nexport default Login;\n","/Users/Ian/Development/code/mod4/activity_tracker/client/src/components/Charts/MeditationChart.js",[],"/Users/Ian/Development/code/mod4/activity_tracker/client/src/components/Login/Signup.js",["69"],"import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction SignUp({ setLoggedIn, setCurrentUser }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    fetch(\"http://localhost:3000/users\", {\n      method: \"POST\",\n      headers: {\n        Accepts: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password\n      }),\n    }).then((r) => {\n      if (r.ok) {\n        r.json().then((data) => {\n          localStorage.setItem(\"token\", data.include[0].jwt);\n          setLoggedIn(true)\n          setCurrentUser(data)\n          setUsername(\"\");\n          setPassword(\"\");\n          navigate(\"/activities\")\n        });\n      } else {\n        r.json().then((err) => {\n          console.log(err);\n        });\n      }\n    });\n  }\n\n  return (\n    <div className=\"signup_login\">\n      <h5>Welcome!</h5>\n      <form className=\"signup_login_form\" onSubmit={handleSubmit}>\n        <div className=\"username\">\n          <label htmlFor=\"username\">Username</label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            value={username}\n            onChange={(e) => {\n              setUsername(e.target.value)\n            }}\n          />\n        </div>\n        <div className=\"pass\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={(e) => {\n              setPassword(e.target.value)\n            }}\n          />\n        </div>\n        <button type=\"submit\">Sign me up!</button>\n      </form>\n      <button id=\"have_account\" onClick={() => navigate(\"/login\")}>\n        I am a returning user\n      </button>\n    </div>\n  );\n}\n\nexport default SignUp;\n\n\n        // Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n","/Users/Ian/Development/code/mod4/activity_tracker/client/src/components/Charts/YogaChart.js",[],"/Users/Ian/Development/code/mod4/activity_tracker/client/src/components/Charts/CardioChart.js",[],"/Users/Ian/Development/code/mod4/activity_tracker/client/src/components/Activities.js",["70","71"],"import React, { useState } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport Select from \"react-select\";\nimport MeditationTable from \"./Tables/MeditationTable\";\nimport YogaTable from \"./Tables/YogaTable\";\nimport CardioTable from \"./Tables/CardioTable\";\nimport MeditationChart from \"./Charts/MeditationChart\";\nimport YogaChart from \"./Charts/YogaChart\";\nimport CardioChart from \"./Charts/CardioChart\";\nimport { useNavigate } from \"react-router-dom\";\nconst backend_API = `http://localhost:3000/activities`;\n\nfunction Activities({ currentUser, setCurrentUser }) {\n  const [activityHash, setActivityHash] = useState([]);\n  const [activity, setActivity] = useState(\"\");\n  const [selected, setSelected] = useState(false);\n  const navigate = useNavigate();\n\n  console.log(currentUser);\n\n  const activityOptions = [\n    { value: \"meditation\", label: \"🧘 Meditation\" },\n    { value: \"yoga\", label: \"🤸‍♂️ Yoga\" },\n    { value: \"cardio\", label: \"🏃🏽 Cardio\" },\n  ];\n\n  const meditationSessions = [];\n  const yogaSessions = [];\n  const cardioSessions = [];\n\n  const meditationLabels = [];\n  const yogaLabels = [];\n  const cardioLabels = [];\n\n  const meditationTime = [];\n  const yogaTime = [];\n  const cardioTime = [];\n\n  if (activityHash.length) {\n    for (let i = 0; i < activityHash.length; i++) {\n      if (activityHash[i].name === \"meditation\") {\n        meditationLabels.push(activityHash[i].date);\n        meditationSessions.push(activityHash[i]);\n        meditationTime.push(activityHash[i].minutes);\n      } else if (activityHash[i].name === \"yoga\") {\n        yogaLabels.push(activityHash[i].date);\n        yogaSessions.push(activityHash[i]);\n        yogaTime.push(activityHash[i].minutes);\n      } else if (activityHash[i].name === \"cardio\") {\n        cardioLabels.push(activityHash[i].date);\n        cardioSessions.push(activityHash[i]);\n        cardioTime.push(activityHash[i].minutes);\n      }\n    }\n  }\n\n  function handleMeditationSubmit(e) {\n    e.preventDefault();\n\n    const date = e.target.date.value;\n    const name = activity;\n    const minutes = e.target.minutes.value;\n    const notes = e.target.notes.value;\n\n    fetch(`${backend_API}`, {\n      method: \"POST\",\n      headers: {\n        Accepts: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      },\n      body: JSON.stringify({\n        date,\n        name,\n        minutes,\n        notes,\n      }),\n    }).then(() => {\n      fetch(`${backend_API}`, {\n        method: \"GET\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(data);\n          setActivityHash(data);\n        });\n    });\n  }\n\n  function handleYogaSubmit(e) {\n    e.preventDefault();\n    setActivityHash([]);\n\n    const date = e.target.date.value;\n    const name = activity;\n    const yoga_type = e.target.yoga_type.value;\n    const minutes = e.target.minutes.value;\n    const notes = e.target.notes.value;\n\n    fetch(`${backend_API}`, {\n      method: \"POST\",\n      headers: {\n        Accepts: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      },\n      body: JSON.stringify({\n        date,\n        name,\n        yoga_type,\n        minutes,\n        notes,\n      }),\n    }).then(() => {\n      fetch(`${backend_API}`, {\n        method: \"GET\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setActivityHash(data);\n        });\n    });\n  }\n\n  function handleCardioSubmit(e) {\n    e.preventDefault();\n    setActivityHash([]);\n\n    const date = e.target.date.value;\n    const name = activity;\n    const workout = e.target.workout.value;\n    const distance = e.target.distance.value;\n    const minutes = e.target.minutes.value;\n    const notes = e.target.notes.value;\n\n    fetch(`${backend_API}`, {\n      method: \"POST\",\n      headers: {\n        Accepts: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      },\n      body: JSON.stringify({\n        date,\n        name,\n        workout,\n        distance,\n        minutes,\n        notes,\n      }),\n    }).then(() => {\n      fetch(`${backend_API}`, {\n        method: \"GET\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setActivityHash(data);\n        });\n    });\n  }\n\n  function askToDelete(e, a) {\n    e.preventDefault();\n    window.confirm(`Delete ${activity} from database?`);\n    if (window.confirm) {\n      fetch(`${backend_API}/${a.id}`, {\n        method: \"DELETE\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      }).then(() => {\n        fetch(`${backend_API}`, {\n          method: \"GET\",\n          headers: {\n            Accepts: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n        })\n          .then((res) => res.json())\n          .then((data) => {\n            setActivityHash(data);\n          });\n      });\n    }\n  }\n\n  return (\n    <>\n      <div className=\"welcome_blurb\">\n        <h5>\n          Down to meditate? Into yoga? Always on the move? Get a Leg-Up on life\n          by logging your self-care sessions using the menu below, so you can\n          keep track of your self-care practice.\n        </h5>\n      </div>\n      <div className=\"activity_div\">\n        <Select\n          className=\"activity_dropdown\"\n          autofocus\n          isSearchable\n          placeholder=\"Select an activity to submit new sessions, and see your progress!\"\n          options={activityOptions}\n          onChange={(e) => {\n            fetch(`${backend_API}`, {\n              method: \"GET\",\n              headers: {\n                Accepts: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n              },\n            })\n              .then((res) => res.json())\n              .then((data) => {\n                console.log(data);\n                setActivityHash(data);\n                setSelected(true);\n                setActivity(e.value);\n              });\n          }}\n        />\n        {selected ? (\n          <div className=\"forms\">\n            {activity === \"meditation\" ? (\n              <>\n                <form className=\"form\" onSubmit={handleMeditationSubmit}>\n                  <label for=\"name\">Meditation Session:</label>\n                  <div className=\"inputs\">\n                    <input type=\"text\" name=\"date\" placeholder=\"MM/DD/YYYY\" />\n                    <input\n                      type=\"number\"\n                      name=\"minutes\"\n                      placeholder=\"Time (minutes)\"\n                    />\n                    <input type=\"text\" name=\"notes\" placeholder=\"Notes?\" />\n                    <button type=\"submit\">Submit</button>\n                  </div>\n                </form>\n                {meditationSessions.length ? (\n                  <MeditationChart\n                    meditationLabels={meditationLabels}\n                    meditationTime={meditationTime}\n                  />\n                ) : null}\n                <MeditationTable\n                  meditationSessions={meditationSessions}\n                  askToDelete={askToDelete}\n                />\n              </>\n            ) : null}\n            {activity === \"yoga\" ? (\n              <>\n                <form className=\"form\" onSubmit={handleYogaSubmit}>\n                  <label for=\"name\">Yoga Session:</label>\n                  <div className=\"inputs\">\n                    <input type=\"text\" name=\"date\" placeholder=\"MM/DD/YYYY\" />\n                    <input\n                      type=\"text\"\n                      name=\"yoga_type\"\n                      placeholder=\"Type (Hatha, etc)\"\n                    />\n                    <input\n                      type=\"number\"\n                      name=\"minutes\"\n                      placeholder=\"Time (minutes)\"\n                    />\n                    <input type=\"text\" name=\"notes\" placeholder=\"Notes?\" />\n                    <button type=\"submit\">Submit</button>\n                  </div>\n                </form>\n                {yogaSessions.length ? (\n                  <YogaChart yogaLabels={yogaLabels} yogaTime={yogaTime} />\n                ) : null}\n                <YogaTable\n                  yogaSessions={yogaSessions}\n                  askToDelete={askToDelete}\n                />\n              </>\n            ) : null}\n            {activity === \"cardio\" ? (\n              <>\n                <form className=\"form\" onSubmit={handleCardioSubmit}>\n                  <label for=\"name\">Cardio workout:</label>\n                  <div className=\"inputs\">\n                    <input type=\"text\" name=\"date\" placeholder=\"MM/DD/YYYY\" />\n                    <input\n                      type=\"text\"\n                      name=\"workout\"\n                      placeholder=\"Type (walk/run/hike)\"\n                    />\n                    <input\n                      type=\"number\"\n                      name=\"distance\"\n                      placeholder=\"Distance (miles)\"\n                    />\n                    <input\n                      type=\"number\"\n                      name=\"minutes\"\n                      placeholder=\"Time (minutes)\"\n                    />\n                    <input type=\"text\" name=\"notes\" placeholder=\"Notes?\" />\n                    <button type=\"submit\">Submit</button>\n                  </div>\n                </form>\n                {cardioSessions.length ? (\n                  <CardioChart\n                    cardioLabels={cardioLabels}\n                    cardioTime={cardioTime}\n                  />\n                ) : null}\n                <CardioTable\n                  cardioSessions={cardioSessions}\n                  askToDelete={askToDelete}\n                />\n              </>\n            ) : null}\n          </div>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default Activities;\n",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":1,"column":27,"nodeType":"78","messageId":"79","endLine":1,"endColumn":36},{"ruleId":"76","severity":1,"message":"77","line":1,"column":27,"nodeType":"78","messageId":"79","endLine":1,"endColumn":36},{"ruleId":"76","severity":1,"message":"80","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":13},{"ruleId":"76","severity":1,"message":"81","line":17,"column":9,"nodeType":"78","messageId":"79","endLine":17,"endColumn":17},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Chart' is defined but never used.","'navigate' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]