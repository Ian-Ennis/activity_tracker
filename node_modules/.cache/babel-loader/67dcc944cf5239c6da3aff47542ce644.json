{"ast":null,"code":"var _jsxFileName = \"/Users/ian/Development/cloned_repos/leg_up/activity_tracker/src/components/Activities/Meditations.js\";\nimport MeditationTable from \"./Tables/MeditationTable\";\nimport MeditationChart from \"./Charts/MeditationChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Meditations({\n  activityHash,\n  setActivityHash\n}) {\n  const meditationSessions = [];\n  const meditationLabels = [];\n  const meditationTime = [];\n\n  if (activityHash) {\n    for (let i = 0; i < activityHash.length; i++) {\n      if (activityHash[i].name === \"meditation\") {\n        meditationLabels.push(activityHash[i].date);\n        meditationSessions.push(activityHash[i]);\n        meditationTime.push(activityHash[i].minutes);\n      }\n    }\n  }\n\n  function handleMeditationSubmit(e) {\n    e.preventDefault();\n    const user_id = currentUser.id;\n    const date = e.target.date.value;\n    const name = activity;\n    const minutes = e.target.minutes.value;\n    const notes = e.target.notes.value;\n    fetch(`${backend_API}`, {\n      method: \"POST\",\n      headers: {\n        Accepts: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      },\n      body: JSON.stringify({\n        user_id,\n        name,\n        date,\n        minutes,\n        notes\n      })\n    }).then(() => {\n      fetch(`${backend_API}`, {\n        method: \"GET\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      }).then(res => res.json()).then(data => {\n        setActivityHash(data);\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleMeditationSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Meditation Session:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"date\",\n          placeholder: \"MM/DD/YYYY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"minutes\",\n          placeholder: \"Time (minutes)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"notes\",\n          placeholder: \"Notes?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), meditationSessions.length ? /*#__PURE__*/_jsxDEV(MeditationChart, {\n      meditationLabels: meditationLabels,\n      meditationTime: meditationTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(MeditationTable, {\n      meditationSessions: meditationSessions,\n      askToDelete: askToDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = Meditations;\nexport default Meditations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meditations\");","map":{"version":3,"sources":["/Users/ian/Development/cloned_repos/leg_up/activity_tracker/src/components/Activities/Meditations.js"],"names":["MeditationTable","MeditationChart","Meditations","activityHash","setActivityHash","meditationSessions","meditationLabels","meditationTime","i","length","name","push","date","minutes","handleMeditationSubmit","e","preventDefault","user_id","currentUser","id","target","value","activity","notes","fetch","backend_API","method","headers","Accepts","Authorization","localStorage","getItem","body","JSON","stringify","then","res","json","data","askToDelete"],"mappings":";AAAA,OAAOA,eAAP,MAA4B,0BAA5B;AACA,OAAOC,eAAP,MAA4B,0BAA5B;;;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAArB,EAAuD;AAErD,QAAMC,kBAAkB,GAAG,EAA3B;AACA,QAAMC,gBAAgB,GAAG,EAAzB;AACA,QAAMC,cAAc,GAAG,EAAvB;;AAEA,MAAIJ,YAAJ,EAAkB;AAChB,SAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,YAAY,CAACM,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5C,UAAIL,YAAY,CAACK,CAAD,CAAZ,CAAgBE,IAAhB,KAAyB,YAA7B,EAA2C;AACzCJ,QAAAA,gBAAgB,CAACK,IAAjB,CAAsBR,YAAY,CAACK,CAAD,CAAZ,CAAgBI,IAAtC;AACAP,QAAAA,kBAAkB,CAACM,IAAnB,CAAwBR,YAAY,CAACK,CAAD,CAApC;AACAD,QAAAA,cAAc,CAACI,IAAf,CAAoBR,YAAY,CAACK,CAAD,CAAZ,CAAgBK,OAApC;AACD;AACF;AACF;;AAGD,WAASC,sBAAT,CAAgCC,CAAhC,EAAmC;AACjCA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,OAAO,GAAGC,WAAW,CAACC,EAA5B;AACA,UAAMP,IAAI,GAAGG,CAAC,CAACK,MAAF,CAASR,IAAT,CAAcS,KAA3B;AACA,UAAMX,IAAI,GAAGY,QAAb;AACA,UAAMT,OAAO,GAAGE,CAAC,CAACK,MAAF,CAASP,OAAT,CAAiBQ,KAAjC;AACA,UAAME,KAAK,GAAGR,CAAC,CAACK,MAAF,CAASG,KAAT,CAAeF,KAA7B;AAEAG,IAAAA,KAAK,CAAE,GAAEC,WAAY,EAAhB,EAAmB;AACtBC,MAAAA,MAAM,EAAE,MADc;AAEtBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,OAAO,EAAE,kBADF;AAEP,wBAAgB,kBAFT;AAGPC,QAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AAHhD,OAFa;AAOtBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBjB,QAAAA,OADmB;AAEnBP,QAAAA,IAFmB;AAGnBE,QAAAA,IAHmB;AAInBC,QAAAA,OAJmB;AAKnBU,QAAAA;AALmB,OAAf;AAPgB,KAAnB,CAAL,CAcGY,IAdH,CAcQ,MAAM;AACZX,MAAAA,KAAK,CAAE,GAAEC,WAAY,EAAhB,EAAmB;AACtBC,QAAAA,MAAM,EAAE,KADc;AAEtBC,QAAAA,OAAO,EAAE;AACPC,UAAAA,OAAO,EAAE,kBADF;AAEP,0BAAgB,kBAFT;AAGPC,UAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AAHhD;AAFa,OAAnB,CAAL,CAQGI,IARH,CAQSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EARjB,EASGF,IATH,CASSG,IAAD,IAAU;AACdlC,QAAAA,eAAe,CAACkC,IAAD,CAAf;AACD,OAXH;AAYD,KA3BD;AA4BD;;AAED,sBACE;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,QAAQ,EAAExB,sBAAjC;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,MAAxB;AAA+B,UAAA,WAAW,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,IAAI,EAAC,SAA1B;AAAoC,UAAA,WAAW,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,OAAxB;AAAgC,UAAA,WAAW,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAUGT,kBAAkB,CAACI,MAAnB,gBACC,QAAC,eAAD;AACE,MAAA,gBAAgB,EAAEH,gBADpB;AAEE,MAAA,cAAc,EAAEC;AAFlB;AAAA;AAAA;AAAA;AAAA,YADD,GAKG,IAfN,eAgBE,QAAC,eAAD;AACE,MAAA,kBAAkB,EAAEF,kBADtB;AAEE,MAAA,WAAW,EAAEkC;AAFf;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA,kBADF;AAuBD;;KA/EQrC,W;AAiFT,eAAeA,WAAf","sourcesContent":["import MeditationTable from \"./Tables/MeditationTable\";\nimport MeditationChart from \"./Charts/MeditationChart\";\n\nfunction Meditations({ activityHash, setActivityHash}) {\n\n  const meditationSessions = [];\n  const meditationLabels = [];\n  const meditationTime = [];\n\n  if (activityHash) {\n    for (let i = 0; i < activityHash.length; i++) {\n      if (activityHash[i].name === \"meditation\") {\n        meditationLabels.push(activityHash[i].date);\n        meditationSessions.push(activityHash[i]);\n        meditationTime.push(activityHash[i].minutes);\n      }\n    }\n  }\n\n\n  function handleMeditationSubmit(e) {\n    e.preventDefault();\n\n    const user_id = currentUser.id;\n    const date = e.target.date.value;\n    const name = activity;\n    const minutes = e.target.minutes.value;\n    const notes = e.target.notes.value;\n\n    fetch(`${backend_API}`, {\n      method: \"POST\",\n      headers: {\n        Accepts: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      },\n      body: JSON.stringify({\n        user_id,\n        name,\n        date,\n        minutes,\n        notes,\n      }),\n    }).then(() => {\n      fetch(`${backend_API}`, {\n        method: \"GET\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setActivityHash(data);\n        });\n    });\n  }\n\n  return (\n    <>\n      <form className=\"form\" onSubmit={handleMeditationSubmit}>\n        <label htmlFor=\"name\">Meditation Session:</label>\n        <div className=\"inputs\">\n          <input type=\"text\" name=\"date\" placeholder=\"MM/DD/YYYY\" />\n          <input type=\"number\" name=\"minutes\" placeholder=\"Time (minutes)\" />\n          <input type=\"text\" name=\"notes\" placeholder=\"Notes?\" />\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n      {meditationSessions.length ? (\n        <MeditationChart\n          meditationLabels={meditationLabels}\n          meditationTime={meditationTime}\n        />\n      ) : null}\n      <MeditationTable\n        meditationSessions={meditationSessions}\n        askToDelete={askToDelete}\n      />\n    </>\n  );\n}\n\nexport default Meditations;\n"]},"metadata":{},"sourceType":"module"}