{"ast":null,"code":"var _jsxFileName = \"/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/components/PrepMeditationTable.js\";\nimport React from \"react\";\nimport RenderActivities from \"./RenderActivities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PrepTable({\n  activityHash\n}) {\n  //   console.log(\"hash:\", activityHash)\n  //   console.log(typeof activityHash)\n  const table = [];\n\n  if (activityHash !== '') {\n    //   console.log('activity hash has data')\n    const table = activityHash.map(a => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [a.minutes, \" minutes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: a.notes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)]\n      }, a.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(RenderActivities, {\n      table: table\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  } else {\n    //   console.log('activity hash is empty')\n    return null;\n  }\n}\n_c = PrepTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrepTable\");","map":{"version":3,"sources":["/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/components/PrepMeditationTable.js"],"names":["React","RenderActivities","PrepTable","activityHash","table","map","a","minutes","notes","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAAqC;AACpD;AACA;AACE,QAAMC,KAAK,GAAG,EAAd;;AAEA,MAAID,YAAY,KAAK,EAArB,EAAyB;AACvB;AACA,UAAMC,KAAK,GAAGD,YAAY,CAACE,GAAb,CAAkBC,CAAD,IAAO;AACpC,0BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,qBAAKA,CAAC,CAACC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oBAAKD,CAAC,CAACE;AAAP;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,SAASF,CAAC,CAACG,EAAX;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARa,CAAd;AASA,wBAAO,QAAC,gBAAD;AAAkB,MAAA,KAAK,EAAEL;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAZD,MAYO;AACL;AACA,WAAO,IAAP;AACD;AACF;KArBuBF,S","sourcesContent":["import React from \"react\";\nimport RenderActivities from \"./RenderActivities\";\n\nexport default function PrepTable({ activityHash }) {\n//   console.log(\"hash:\", activityHash)\n//   console.log(typeof activityHash)\n  const table = []\n\n  if (activityHash !== '') {\n    //   console.log('activity hash has data')\n    const table = activityHash.map((a) => {\n      return (\n        <tr key={a.id}>\n          <td></td>\n          <td>{a.minutes} minutes</td>\n          <td>{a.notes}</td>\n        </tr>\n      );\n    });\n    return <RenderActivities table={table} />\n  } else {\n    //   console.log('activity hash is empty')\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}