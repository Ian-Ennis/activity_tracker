{"ast":null,"code":"import { createMemoryHistory, parsePath } from 'history';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nfunction k() {\n  k = Object.assign || function (a) {\n    for (var b = 1; b < arguments.length; b++) {\n      var c = arguments[b],\n          d;\n\n      for (d in c) Object.prototype.hasOwnProperty.call(c, d) && (a[d] = c[d]);\n    }\n\n    return a;\n  };\n\n  return k.apply(this, arguments);\n}\n\nvar l = \"production\" !== process.env.NODE_ENV ? function (a) {\n  return Object.freeze(a);\n} : function (a) {\n  return a;\n};\n\nfunction m(a, b) {\n  if (!a) throw Error(b);\n}\n\nvar n = React.createContext();\n\"production\" !== process.env.NODE_ENV && (n.Consumer.displayName = \"Location.Consumer\", n.Provider.displayName = \"Location.Provider\");\nvar p = React.createContext({\n  outlet: null,\n  params: l({}),\n  pathname: \"\",\n  route: null\n});\n\"production\" !== process.env.NODE_ENV && (p.Consumer.displayName = \"Route.Consumer\", p.Provider.displayName = \"Route.Provider\");\n\nfunction q(a) {\n  var b = a.children,\n      c = a.initialEntries,\n      d = a.initialIndex;\n  a = a.timeout;\n  var e = React.useRef(null);\n  null == e.current && (e.current = createMemoryHistory({\n    initialEntries: c,\n    initialIndex: d\n  }));\n  return React.createElement(r, {\n    children: b,\n    history: e.current,\n    timeout: a\n  });\n}\n\n\"production\" !== process.env.NODE_ENV && (q.displayName = \"MemoryRouter\", q.propTypes = {\n  children: PropTypes.node,\n  timeout: PropTypes.number,\n  initialEntries: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n    pathname: PropTypes.string,\n    search: PropTypes.string,\n    hash: PropTypes.string,\n    state: PropTypes.object,\n    key: PropTypes.string\n  })])),\n  initialIndex: PropTypes.number\n});\n\nfunction t(a) {\n  var b = a.to,\n      c = a.replace;\n  c = void 0 === c ? !1 : c;\n  a = a.state;\n  u()(b, {\n    replace: c,\n    state: a\n  });\n  return null;\n}\n\n\"production\" !== process.env.NODE_ENV && (t.displayName = \"Navigate\", t.propTypes = {\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n    pathname: PropTypes.string,\n    search: PropTypes.string,\n    hash: PropTypes.string\n  })]).isRequired,\n  replace: PropTypes.bool,\n  state: PropTypes.object\n});\n\nfunction v() {\n  return w();\n}\n\n\"production\" !== process.env.NODE_ENV && (v.displayName = \"Outlet\", v.propTypes = {});\n\nfunction x() {\n  return null;\n}\n\n\"production\" !== process.env.NODE_ENV && (x.displayName = \"Redirect\", x.propTypes = {\n  children: function (a, b) {\n    if (null != a[b]) return Error(\"A <Redirect> should not have child routes; they will never be rendered.\");\n  },\n  from: PropTypes.string,\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n    pathname: PropTypes.string,\n    search: PropTypes.string,\n    hash: PropTypes.string\n  })])\n});\n\nfunction y(a) {\n  return a.element;\n}\n\n\"production\" !== process.env.NODE_ENV && (y.displayName = \"Route\", y.propTypes = {\n  children: PropTypes.node,\n  element: PropTypes.element,\n  path: PropTypes.string\n});\n\nfunction z(a) {\n  return a();\n}\n\nvar A = React.useTransition || function () {\n  return [z, !1];\n};\n\nfunction r(a) {\n  var b = a.children;\n  b = void 0 === b ? null : b;\n  var c = a.history;\n  a = a.timeout;\n  var d = void 0 === a ? 2E3 : a,\n      e = React.useState(c.location);\n  a = e[0];\n  var f = e[1];\n  d = A({\n    timeoutMs: d\n  });\n  var g = d[0];\n  d = d[1];\n  e = React.useRef(!1);\n  React.useContext(n) ? \"production\" !== process.env.NODE_ENV ? m(!1, \"You cannot render a <Router> inside another <Router>. You never need more than one.\") : m(!1) : void 0;\n  e.current || (e.current = !0, c.listen(function (a) {\n    var b = a.location;\n    g(function () {\n      f(b);\n    });\n  }));\n  return React.createElement(n.Provider, {\n    children: b,\n    value: {\n      history: c,\n      location: a,\n      pending: d\n    }\n  });\n}\n\n\"production\" !== process.env.NODE_ENV && (r.displayName = \"Router\", r.propTypes = {\n  children: PropTypes.node,\n  history: PropTypes.shape({\n    action: PropTypes.string,\n    location: PropTypes.object,\n    push: PropTypes.func,\n    replace: PropTypes.func,\n    go: PropTypes.func,\n    listen: PropTypes.func,\n    block: PropTypes.func\n  }),\n  timeout: PropTypes.number\n});\n\nfunction B(a) {\n  var b = a.basename;\n  b = void 0 === b ? \"\" : b;\n  var c = a.caseSensitive;\n  c = void 0 === c ? !1 : c;\n  a = C(a.children);\n  return D(a, b, c);\n}\n\n\"production\" !== process.env.NODE_ENV && (B.displayName = \"Routes\", B.propTypes = {\n  basename: PropTypes.string,\n  caseSensitive: PropTypes.bool,\n  children: PropTypes.node\n});\n\nfunction C(a) {\n  var b = [];\n  React.Children.forEach(a, function (a) {\n    if (React.isValidElement(a)) {\n      var c = a.props,\n          e = c.children,\n          f = c.from,\n          g = c.path;\n      c = c.to;\n      a.type === React.Fragment ? b.push.apply(b, C(e)) : (g = g || f || \"/\", c ? a = {\n        path: g,\n        redirectTo: c\n      } : (a = {\n        path: g,\n        element: a\n      }, e = C(e), e.length && (a.children = e)), b.push(a));\n    }\n  });\n  return b;\n}\n\nfunction E() {\n  return React.useContext(n).location;\n}\n\nfunction u() {\n  var a = React.useContext(n),\n      b = a.history,\n      c = a.pending,\n      d = React.useContext(p).pathname;\n  null == b ? \"production\" !== process.env.NODE_ENV ? m(!1, \"navigation may be used only in the context of a <Router> component\") : m(!1) : void 0;\n  return React.useCallback(function (a, f) {\n    var e = void 0 === f ? {} : f;\n    f = e.replace;\n    e = e.state;\n    \"number\" === typeof a ? b.go(a) : (a = F(a, d), b[f || c ? \"replace\" : \"push\"](a, e));\n  }, [b, c, d]);\n}\n\nfunction w() {\n  return React.useContext(p).outlet;\n}\n\nfunction G(a) {\n  var b = React.useContext(p).pathname;\n  return React.useMemo(function () {\n    return F(a, b);\n  }, [a, b]);\n}\n\nvar I, J;\n\"production\" !== process.env.NODE_ENV && (I = {}, J = function (a, b, c) {\n  if (!b && !I[a]) if (I[a] = !0, \"production\" !== process.env.NODE_ENV) {\n    \"undefined\" !== typeof console && console.warn(c);\n\n    try {\n      throw Error(c);\n    } catch (d) {}\n  } else void 0;\n});\n\nfunction D(a, b, c) {\n  void 0 === b && (b = \"\");\n  void 0 === c && (c = !1);\n  var d = React.useContext(p),\n      e = d.params,\n      f = d.pathname;\n  d = d.route;\n\n  if (J) {\n    var g = d && d.path;\n    J(f, !d || d.path.endsWith(\"*\"), 'You rendered descendant <Routes> (or called `useRoutes`) at \"' + f + '\" (under <Route path=\"' + (g + '\">) but the parent route path has no trailing \"*\". This means if you navigate deeper, the parent won\\'t match anymore and therefore the child routes will never render.\\n\\nPlease change the parent <Route path=\"') + (g + '\"> to <Route path=\"' + g + '/*\">.'));\n  }\n\n  b = b ? K([f, b]) : f;\n  d = u();\n  var H = E();\n  g = React.useMemo(function () {\n    return L(a, H, b, c);\n  }, [a, H, b, c]);\n  if (!g) return null;\n  var h = g.find(function (a) {\n    return null != a.route.redirectTo;\n  });\n  return h ? (g = h.params, f = F(h.route.redirectTo, f), h = f.pathname, /:\\w+/.test(h) && (f = k({}, f, {\n    pathname: M(h, g)\n  })), d(f, {\n    replace: !0\n  }), null) : g.reduceRight(function (a, c) {\n    var d = c.pathname,\n        f = c.route;\n    return React.createElement(p.Provider, {\n      children: f.element,\n      value: {\n        outlet: a,\n        params: l(k({}, e, {}, c.params)),\n        pathname: K([b, d]),\n        route: f\n      }\n    });\n  }, null);\n}\n\nfunction L(a, b, c, d) {\n  function e(a) {\n    a = g[a];\n    var b = a[1];\n    if (N(a[0], !0, d)[0].test(f)) return {\n      v: b.map(function (a, c) {\n        c = b.slice(0, c + 1);\n        c = K(c.map(function (a) {\n          return a.path;\n        }));\n        var e = N(c, !1, d);\n        c = e[1];\n        e = f.match(e[0]);\n        return {\n          params: O(c, e.slice(2)),\n          pathname: \"/\" + e[1],\n          route: a\n        };\n      })\n    };\n  }\n\n  void 0 === c && (c = \"\");\n  void 0 === d && (d = !1);\n  \"string\" === typeof b && (b = parsePath(b));\n  c = c.replace(/^\\/+|\\/+$/g, \"\");\n  var f = b.pathname.slice(1);\n  if (c) if (c === f) f = \"\";else if (f.startsWith(c)) f = f.slice(c.length).replace(/^\\/+/, \"\");else return null;\n  var g = P(a);\n  Q(g);\n\n  for (a = 0; a < g.length; ++a) if (b = e(a), \"object\" === typeof b) return b.v;\n\n  return null;\n}\n\nfunction P(a, b, c, d, e) {\n  void 0 === b && (b = []);\n  void 0 === c && (c = \"\");\n  void 0 === d && (d = []);\n  void 0 === e && (e = []);\n  a.forEach(function (a, g) {\n    var f = K([c, a.path]),\n        h = d.concat(a);\n    g = e.concat(g);\n    b.push([f, h, g]);\n    a.children && P(a.children, b, f, h, g);\n  });\n  return b;\n}\n\nvar R = /^:\\w+$/,\n    S = 2,\n    T = 1,\n    U = 10,\n    V = -2;\n\nfunction W(a) {\n  return \"*\" === a;\n}\n\nfunction X(a) {\n  a = a.split(\"/\");\n  var b = a.length;\n  a.some(W) && (b += V);\n  return a.filter(function (a) {\n    return !W(a);\n  }).reduce(function (a, b) {\n    return a + (R.test(b) ? S : \"\" === b ? T : U);\n  }, b);\n}\n\nfunction Q(a) {\n  var b = a.reduce(function (a, b) {\n    b = b[0];\n    a[b] = X(b);\n    return a;\n  }, {});\n  a.sort(function (a, d) {\n    var c = a[2];\n    a = b[a[0]];\n    var f = d[2];\n    d = b[d[0]];\n    return a !== d ? d - a : Y(c, f);\n  });\n}\n\nfunction Y(a, b) {\n  return a.length === b.length && a.slice(0, -1).every(function (a, d) {\n    return a === b[d];\n  }) ? a[a.length - 1] - b[b.length - 1] : 0;\n}\n\nfunction N(a, b, c) {\n  var d = [],\n      e = \"^(\" + a.replace(/^\\/+/, \"\").replace(/\\*\\//g, \"\").replace(/\\/?\\*?$/, \"\").replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\").replace(/:(\\w+)/g, function (a, b) {\n    d.push(b);\n    return \"([^\\\\/]+)\";\n  }) + \")\";\n  a.endsWith(\"*\") ? (a.endsWith(\"/*\") && (e += \"\\\\/?\"), d.push(\"*\"), e += \"(.*)\") : b && (e += \"\\\\/?\");\n  b && (e += \"$\");\n  return [new RegExp(e, c ? void 0 : \"i\"), d];\n}\n\nfunction O(a, b) {\n  return a.reduce(function (a, d, e) {\n    a[d] = b[e];\n    return a;\n  }, {});\n}\n\nfunction K(a) {\n  return a.join(\"/\").replace(/\\/\\/+/g, \"/\");\n}\n\nfunction Z(a, b) {\n  var c = b.replace(/\\/+$/, \"\").replace(/\\/\\/+/g, \"/\").split(\"/\");\n  a.replace(/\\/\\/+/g, \"/\").split(\"/\").forEach(function (a) {\n    \"..\" === a ? 1 < c.length && c.pop() : \".\" !== a && c.push(a);\n  });\n  return 1 < c.length ? K(c) : \"/\";\n}\n\nfunction F(a, b) {\n  void 0 === b && (b = \"/\");\n  var c = \"string\" === typeof a ? parsePath(a) : a;\n  a = c.pathname;\n  var d = c.search;\n  d = void 0 === d ? \"\" : d;\n  c = c.hash;\n  c = void 0 === c ? \"\" : c;\n  return {\n    pathname: a ? a.startsWith(\"/\") ? Z(a, \"/\") : Z(a, b) : b,\n    search: d,\n    hash: c\n  };\n}\n\nfunction M(a, b) {\n  void 0 === b && (b = {});\n  return a.replace(/:(\\w+)/g, function (a, d) {\n    return b[d] || \":\" + d;\n  }).replace(/\\*$/, function (a) {\n    return b[a] || a;\n  });\n}\n\nfunction useBlocker(a, b) {\n  void 0 === b && (b = !0);\n  var c = React.useContext(n).history;\n  null == c ? \"production\" !== process.env.NODE_ENV ? m(!1, \"navigation blocking may be used only in the context of a <Router> component\") : m(!1) : void 0;\n  React.useEffect(function () {\n    if (b) {\n      var d = c.block(function (b) {\n        var c = k({}, b, {\n          retry: function () {\n            d();\n            b.retry();\n          }\n        });\n        a(c);\n      });\n      return d;\n    }\n  }, [c, b, a]);\n}\n\n;\n\nfunction useHref(a) {\n  a = G(a);\n  var b = React.useContext(n).history;\n  null == b ? \"production\" !== process.env.NODE_ENV ? m(!1, \"href resolution may be used only in the context of a <Router> component\") : m(!1) : void 0;\n  return b.createHref(a);\n}\n\n;\n\nfunction useMatch(a) {\n  var b = E();\n  a = G(a);\n  return b.pathname === a.pathname;\n}\n\n;\n\nfunction useParams() {\n  return React.useContext(p).params;\n}\n\n;\nexport { q as MemoryRouter, t as Navigate, v as Outlet, x as Redirect, y as Route, r as Router, B as Routes, C as createRoutesFromChildren, M as generatePath, L as matchRoutes, F as resolveLocation, useBlocker, useHref, E as useLocation, useMatch, u as useNavigate, w as useOutlet, useParams, G as useResolvedLocation, D as useRoutes };","map":{"version":3,"sources":["../../packages/react-router/index.js"],"names":["readOnly","Object","obj","invariant","console","Error","React","LocationContext","RouteContext","outlet","params","pathname","route","MemoryRouter","children","initialEntries","initialIndex","timeout","historyRef","createMemoryHistory","history","PropTypes","search","hash","state","key","Navigate","to","replace","useNavigate","navigate","Outlet","useOutlet","Redirect","redirectChildrenType","props","from","Route","element","path","startTransition","tx","useTransition","Router","location","setLocation","pending","timeoutMs","listeningRef","value","action","push","go","listen","block","Routes","basename","caseSensitive","routes","createRoutesFromChildren","useRoutes","redirectTo","childRoutes","useBlocker","when","autoUnblockingTx","retry","useHref","resolvedLocation","useResolvedLocation","useLocation","useMatch","relativeTo","resolveLocation","method","useParams","missingTrailingSplatWarnings","warnAboutMissingTrailingSplatAt","cond","message","parentParams","parentPathname","parentRoute","parentPath","joinPaths","matches","matchRoutes","redirectMatch","match","generatePath","parsePath","base","target","flattenedRoutes","flattenRoutes","rankFlattenedRoutes","i","flatRoutes","compilePath","matcher","index","r","keys","createParams","parentRoutes","parentIndexes","indexes","paramRe","dynamicSegmentValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","computeScore","segments","initialScore","score","segment","pathScores","memo","a","b","aIndexes","aScore","bIndexes","bScore","compareIndexes","n","siblings","pattern","_","end","undefined","values","paths","normalizeSlashes","resolvePathname","fromPathname","toPathname","relativeSegments","splat"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createMemoryHistory, parsePath } from 'history';\n\nconst readOnly = __DEV__ ? obj => Object.freeze(obj) : obj => obj;\n\nfunction invariant(cond, message) {\n  if (!cond) throw new Error(message);\n}\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== 'undefined') console.warn(message);\n\n    try {\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// CONTEXT\n///////////////////////////////////////////////////////////////////////////////\n\nconst LocationContext = React.createContext();\n\nif (__DEV__) {\n  LocationContext.Consumer.displayName = 'Location.Consumer';\n  LocationContext.Provider.displayName = 'Location.Provider';\n}\n\nconst RouteContext = React.createContext({\n  outlet: null,\n  params: readOnly({}),\n  pathname: '',\n  route: null\n});\n\nif (__DEV__) {\n  RouteContext.Consumer.displayName = 'Route.Consumer';\n  RouteContext.Provider.displayName = 'Route.Provider';\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * A <Router> that stores all entries in memory.\n */\nexport function MemoryRouter({\n  children,\n  initialEntries,\n  initialIndex,\n  timeout\n}) {\n  let historyRef = React.useRef(null);\n\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({ initialEntries, initialIndex });\n  }\n\n  return (\n    <Router\n      children={children}\n      history={historyRef.current}\n      timeout={timeout}\n    />\n  );\n}\n\nif (__DEV__) {\n  MemoryRouter.displayName = 'MemoryRouter';\n  MemoryRouter.propTypes = {\n    children: PropTypes.node,\n    timeout: PropTypes.number,\n    initialEntries: PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.shape({\n          pathname: PropTypes.string,\n          search: PropTypes.string,\n          hash: PropTypes.string,\n          state: PropTypes.object,\n          key: PropTypes.string\n        })\n      ])\n    ),\n    initialIndex: PropTypes.number\n  };\n}\n\n/**\n * Navigate programmatically using a component.\n */\nexport function Navigate({ to, replace = false, state }) {\n  let navigate = useNavigate();\n  navigate(to, { replace, state });\n  return null;\n}\n\nif (__DEV__) {\n  Navigate.displayName = 'Navigate';\n  Navigate.propTypes = {\n    to: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.shape({\n        pathname: PropTypes.string,\n        search: PropTypes.string,\n        hash: PropTypes.string\n      })\n    ]).isRequired,\n    replace: PropTypes.bool,\n    state: PropTypes.object\n  };\n}\n\n/**\n * Renders the child route's element, if there is one.\n */\nexport function Outlet() {\n  return useOutlet();\n}\n\nif (__DEV__) {\n  Outlet.displayName = 'Outlet';\n  Outlet.propTypes = {};\n}\n\n/**\n * Used in a route config to redirect from one location to another.\n */\nexport function Redirect() {\n  return null;\n}\n\nif (__DEV__) {\n  Redirect.displayName = 'Redirect';\n\n  function redirectChildrenType(props, propName, componentName) {\n    if (props[propName] != null) {\n      return new Error(\n        'A <Redirect> should not have child routes; they will never be rendered.'\n      );\n    }\n  }\n\n  Redirect.propTypes = {\n    children: redirectChildrenType,\n    from: PropTypes.string,\n    to: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.shape({\n        pathname: PropTypes.string,\n        search: PropTypes.string,\n        hash: PropTypes.string\n      })\n    ])\n  };\n}\n\n/**\n * Used in a route config to render an element.\n */\nexport function Route({ element }) {\n  return element;\n}\n\nif (__DEV__) {\n  Route.displayName = 'Route';\n  Route.propTypes = {\n    children: PropTypes.node,\n    element: PropTypes.element,\n    path: PropTypes.string\n  };\n}\n\n// TODO: Remove once React.useTransition is stable.\nconst startTransition = tx => tx();\nconst useTransition = React.useTransition || (() => [startTransition, false]);\n\n/**\n * The root context provider. There should be only one of these in a given app.\n */\nexport function Router({ children = null, history, timeout = 2000 }) {\n  let [location, setLocation] = React.useState(history.location);\n  let [startTransition, pending] = useTransition({ timeoutMs: timeout });\n  let listeningRef = React.useRef(false);\n\n  invariant(\n    !React.useContext(LocationContext),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You never need more than one.`\n  );\n\n  if (!listeningRef.current) {\n    listeningRef.current = true;\n    history.listen(({ location }) => {\n      startTransition(() => {\n        setLocation(location);\n      });\n    });\n  }\n\n  return (\n    <LocationContext.Provider\n      children={children}\n      value={{ history, location, pending }}\n    />\n  );\n}\n\nif (__DEV__) {\n  Router.displayName = 'Router';\n  Router.propTypes = {\n    children: PropTypes.node,\n    history: PropTypes.shape({\n      action: PropTypes.string,\n      location: PropTypes.object,\n      push: PropTypes.func,\n      replace: PropTypes.func,\n      go: PropTypes.func,\n      listen: PropTypes.func,\n      block: PropTypes.func\n    }),\n    timeout: PropTypes.number\n  };\n}\n\n/**\n * A wrapper for useRoutes that treats its children as route and/or redirect\n * objects.\n */\nexport function Routes({ basename = '', caseSensitive = false, children }) {\n  let routes = createRoutesFromChildren(children);\n  return useRoutes(routes, basename, caseSensitive);\n}\n\nif (__DEV__) {\n  Routes.displayName = 'Routes';\n  Routes.propTypes = {\n    basename: PropTypes.string,\n    caseSensitive: PropTypes.bool,\n    children: PropTypes.node\n  };\n}\n\n/**\n * Utility function that creates a routes config object from a React\n * \"children\" object, which is usually either a React element or an\n * array of elements.\n */\nexport function createRoutesFromChildren(children) {\n  let routes = [];\n\n  React.Children.forEach(children, element => {\n    // Ignore non-elements. This allows people to more\n    // easily inline conditionals in their route config.\n    if (!React.isValidElement(element)) return;\n\n    let { children, from, path, to } = element.props;\n\n    // Transparently support React.Fragment and its children.\n    if (element.type === React.Fragment) {\n      routes.push.apply(routes, createRoutesFromChildren(children));\n      return;\n    }\n\n    path = path || from || '/';\n\n    // Components that have a to prop are redirects.\n    // All others should use path + element (and maybe children) props.\n    let route;\n    if (to) {\n      route = { path, redirectTo: to };\n    } else {\n      route = { path, element };\n\n      let childRoutes = createRoutesFromChildren(children);\n      if (childRoutes.length) {\n        route.children = childRoutes;\n      }\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// HOOKS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Blocks all navigation attempts. This is useful for preventing the page from\n * changing until some condition is met, like saving form data.\n */\nexport function useBlocker(blocker, when = true) {\n  let { history } = React.useContext(LocationContext);\n\n  // TODO: This error is probably because they somehow have\n  // 2 versions of the router loaded. We can help them understand\n  // how to avoid that.\n  invariant(\n    history != null,\n    'navigation blocking may be used only in the context of a <Router> component'\n  );\n\n  React.useEffect(() => {\n    if (when) {\n      let unblock = history.block(tx => {\n        let autoUnblockingTx = {\n          ...tx,\n          retry() {\n            // Automatically unblock the transition so it can\n            // play all the way through before retrying it.\n            // TODO: Figure out how to re-enable this block if the\n            // transition is cancelled for some reason.\n            unblock();\n            tx.retry();\n          }\n        };\n\n        blocker(autoUnblockingTx);\n      });\n\n      return unblock;\n    }\n  }, [history, when, blocker]);\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n */\nexport function useHref(to) {\n  let resolvedLocation = useResolvedLocation(to);\n  let { history } = React.useContext(LocationContext);\n\n  // TODO: This error is probably because they somehow have\n  // 2 versions of the router loaded. We can help them understand\n  // how to avoid that.\n  invariant(\n    history != null,\n    'href resolution may be used only in the context of a <Router> component'\n  );\n\n  return history.createHref(resolvedLocation);\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * NOTE: If you're using this it may mean you're doing some of your own \"routing\"\n * in your app, and we'd like to know what your use case is. We may be able to\n * provide something higher-level to better suit your needs.\n */\nexport function useLocation() {\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n */\nexport function useMatch(to) {\n  let location = useLocation();\n  let resolvedLocation = useResolvedLocation(to);\n  // TODO: Try to match search + hash as well\n  return location.pathname === resolvedLocation.pathname;\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n */\nexport function useNavigate() {\n  let { history, pending } = React.useContext(LocationContext);\n  let { pathname } = React.useContext(RouteContext);\n\n  // TODO: This error is probably because they somehow have\n  // 2 versions of the router loaded. We can help them understand\n  // how to avoid that.\n  invariant(\n    history != null,\n    'navigation may be used only in the context of a <Router> component'\n  );\n\n  let navigate = React.useCallback(\n    (to, { replace, state } = {}) => {\n      if (typeof to === 'number') {\n        history.go(to);\n      } else {\n        let relativeTo = resolveLocation(to, pathname);\n\n        // If we are pending transition, use REPLACE instead of PUSH.\n        // This will prevent URLs that we started navigating to but\n        // never fully loaded from appearing in the history stack.\n        let method = !!replace || pending ? 'replace' : 'push';\n        history[method](relativeTo, state);\n      }\n    },\n    [history, pending, pathname]\n  );\n\n  return navigate;\n}\n\n/**\n * Returns the outlet element at this level of the route hierarchy. Used to\n * render child routes.\n */\nexport function useOutlet() {\n  return React.useContext(RouteContext).outlet;\n}\n\n/**\n * Returns a hash of the dynamic params that were matched in the route path.\n * This is useful for using ids embedded in the URL to fetch data, but we\n * eventually want to provide something at a higher level for this.\n */\nexport function useParams() {\n  return React.useContext(RouteContext).params;\n}\n\n/**\n * Returns a fully-resolved location object relative to the current location.\n */\nexport function useResolvedLocation(to) {\n  let { pathname } = React.useContext(RouteContext);\n  return React.useMemo(() => resolveLocation(to, pathname), [to, pathname]);\n}\n\nlet missingTrailingSplatWarnings, warnAboutMissingTrailingSplatAt;\nif (__DEV__) {\n  missingTrailingSplatWarnings = {};\n  warnAboutMissingTrailingSplatAt = (pathname, cond, message) => {\n    if (!cond && !missingTrailingSplatWarnings[pathname]) {\n      missingTrailingSplatWarnings[pathname] = true;\n      warning(false, message);\n    }\n  };\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * Route objects may take one of 2 forms:\n *\n * - { path, element, children }\n * - { path, redirectTo }\n *\n * We should probably write this up in TypeScript instead of in a comment. In\n * fact, what am I even doing here. Nobody is ever going to read this.\n */\nexport function useRoutes(routes, basename = '', caseSensitive = false) {\n  let {\n    params: parentParams,\n    pathname: parentPathname,\n    route: parentRoute\n  } = React.useContext(RouteContext);\n\n  if (warnAboutMissingTrailingSplatAt) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since\n    // we cannot even give the warning unless they land at the parent route.\n    let parentPath = parentRoute && parentRoute.path;\n    warnAboutMissingTrailingSplatAt(\n      parentPathname,\n      !parentRoute || parentRoute.path.endsWith('*'),\n      `You rendered descendant <Routes> (or called \\`useRoutes\\`) at \"${parentPathname}\"` +\n        ` (under <Route path=\"${parentPath}\">) but the parent route path has no trailing \"*\".` +\n        ` This means if you navigate deeper, the parent won't match anymore and therefore` +\n        ` the child routes will never render.` +\n        `\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route path=\"${parentPath}/*\">.`\n    );\n  }\n\n  basename = basename ? joinPaths([parentPathname, basename]) : parentPathname;\n\n  let navigate = useNavigate();\n  let location = useLocation();\n  let matches = React.useMemo(\n    () => matchRoutes(routes, location, basename, caseSensitive),\n    [routes, location, basename, caseSensitive]\n  );\n\n  if (!matches) {\n    // TODO: Warn about nothing matching, suggest using a catch-all route.\n    return null;\n  }\n\n  // If we matched a redirect, navigate and return null.\n  let redirectMatch = matches.find(match => isRedirectRoute(match.route));\n  if (redirectMatch) {\n    let { params, route } = redirectMatch;\n    let relativeTo = resolveLocation(route.redirectTo, parentPathname);\n\n    let { pathname } = relativeTo;\n    if (/:\\w+/.test(pathname)) {\n      // Allow param interpolation into <Redirect to>, e.g.\n      // <Redirect from=\"users/:id\" to=\"profile/:id\">\n      relativeTo = { ...relativeTo, pathname: generatePath(pathname, params) };\n    }\n\n    navigate(relativeTo, { replace: true });\n\n    return null;\n  }\n\n  // TODO: Initiate preload sequence here.\n\n  // Otherwise render an element.\n  let element = matches.reduceRight((outlet, { params, pathname, route }) => {\n    return (\n      <RouteContext.Provider\n        children={route.element}\n        value={{\n          outlet,\n          params: readOnly({ ...parentParams, ...params }),\n          pathname: joinPaths([basename, pathname]),\n          route\n        }}\n      />\n    );\n  }, null);\n\n  return element;\n}\n\nfunction isRedirectRoute(route) {\n  return route.redirectTo != null;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Matches the given routes to a location and returns the match data.\n */\nexport function matchRoutes(\n  routes,\n  location,\n  basename = '',\n  caseSensitive = false\n) {\n  if (typeof location === 'string') {\n    location = parsePath(location);\n  }\n\n  // TODO: Validate location\n  // - it should have a pathname\n  let base = basename.replace(/^\\/+|\\/+$/g, '');\n  let target = location.pathname.slice(1);\n\n  if (base) {\n    if (base === target) {\n      target = '';\n    } else if (target.startsWith(base)) {\n      target = target.slice(base.length).replace(/^\\/+/, '');\n    } else {\n      return null;\n    }\n  }\n\n  let flattenedRoutes = flattenRoutes(routes);\n\n  // TODO: Validate the routes config\n  // - routes should all have paths and elements\n  // - redirects should have a redirectTo\n  // - redirects should not have children\n  // - warn about unreachable routes\n\n  rankFlattenedRoutes(flattenedRoutes);\n\n  for (let i = 0; i < flattenedRoutes.length; ++i) {\n    let [path, flatRoutes] = flattenedRoutes[i];\n\n    // TODO: Match on search, state too\n    let [matcher] = compilePath(path, /* end */ true, caseSensitive);\n\n    if (matcher.test(target)) {\n      return flatRoutes.map((route, index) => {\n        let routes = flatRoutes.slice(0, index + 1);\n        let path = joinPaths(routes.map(r => r.path));\n        let [matcher, keys] = compilePath(path, /* end */ false, caseSensitive);\n        let match = target.match(matcher);\n\n        return {\n          params: createParams(keys, match.slice(2)),\n          pathname: '/' + match[1],\n          route\n        };\n      });\n    }\n  }\n\n  return null;\n}\n\nfunction flattenRoutes(\n  routes,\n  flattenedRoutes = [],\n  parentPath = '',\n  parentRoutes = [],\n  parentIndexes = []\n) {\n  routes.forEach((route, index) => {\n    let path = joinPaths([parentPath, route.path]);\n    let routes = parentRoutes.concat(route);\n    let indexes = parentIndexes.concat(index);\n\n    flattenedRoutes.push([path, routes, indexes]);\n\n    if (route.children) {\n      flattenRoutes(route.children, flattenedRoutes, path, routes, indexes);\n    }\n  });\n\n  return flattenedRoutes;\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === '*';\n\nfunction computeScore(path) {\n  let segments = path.split('/');\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  return segments\n    .filter(s => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === ''\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction rankFlattenedRoutes(flattenedRoutes) {\n  let pathScores = flattenedRoutes.reduce((memo, [path]) => {\n    memo[path] = computeScore(path);\n    return memo;\n  }, {});\n\n  flattenedRoutes.sort((a, b) => {\n    let [aPath, , aIndexes] = a;\n    let aScore = pathScores[aPath];\n\n    let [bPath, , bIndexes] = b;\n    let bScore = pathScores[bPath];\n\n    return aScore !== bScore\n      ? bScore - aScore // Higher score first\n      : compareIndexes(aIndexes, bIndexes);\n  });\n}\n\nfunction compareIndexes(a, b) {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? a[a.length - 1] - b[b.length - 1] // Earlier siblings come first\n    : 0; // It doesn't make sense to rank non-siblings by index, so they sort equal\n}\n\nfunction compilePath(path, end, caseSensitive) {\n  let keys = [];\n  let pattern =\n    '^(' +\n    path\n      .replace(/^\\/+/, '') // Ignore leading /\n      .replace(/\\*\\//g, '') // Ignore */ (from paths nested under a *)\n      .replace(/\\/?\\*?$/, '') // Ignore trailing /*, we'll handle it below\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, '\\\\$&') // Escape special regex chars\n      .replace(/:(\\w+)/g, (_, key) => {\n        keys.push(key);\n        return '([^\\\\/]+)';\n      }) +\n    ')';\n\n  if (path.endsWith('*')) {\n    if (path.endsWith('/*')) {\n      pattern += '\\\\/?'; // Don't include the / in params['*']\n    }\n    keys.push('*');\n    pattern += '(.*)';\n  } else if (end) {\n    pattern += '\\\\/?';\n  }\n\n  if (end) pattern += '$';\n\n  let flags = caseSensitive ? undefined : 'i';\n  let matcher = new RegExp(pattern, flags);\n\n  return [matcher, keys];\n}\n\nfunction createParams(keys, values) {\n  return keys.reduce((params, key, index) => {\n    // TODO: Use decodeURIComponent here to decode values?\n    params[key] = values[index];\n    return params;\n  }, {});\n}\n\nconst trimTrailingSlashes = path => path.replace(/\\/+$/, '');\nconst normalizeSlashes = path => path.replace(/\\/\\/+/g, '/');\nconst joinPaths = paths => normalizeSlashes(paths.join('/'));\nconst splitPath = path => normalizeSlashes(path).split('/');\n\nfunction resolvePathname(toPathname, fromPathname) {\n  let segments = splitPath(trimTrailingSlashes(fromPathname));\n  let relativeSegments = splitPath(toPathname);\n\n  relativeSegments.forEach(segment => {\n    if (segment === '..') {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== '.') {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? joinPaths(segments) : '/';\n}\n\n/**\n * Returns a fully resolve location object relative to the given pathname.\n */\nexport function resolveLocation(to, fromPathname = '/') {\n  let { pathname: toPathname, search = '', hash = '' } =\n    typeof to === 'string' ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith('/')\n      ? resolvePathname(toPathname, '/')\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return { pathname, search, hash };\n}\n\n/**\n * Creates a path with params interpolated.\n */\nexport function generatePath(pathname, params = {}) {\n  return pathname\n    .replace(/:(\\w+)/g, (_, key) => params[key] || `:${key}`)\n    .replace(/\\*$/, splat => params[splat] || splat);\n}\n"]},"metadata":{},"sourceType":"module"}