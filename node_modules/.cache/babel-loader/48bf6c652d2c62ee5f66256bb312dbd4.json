{"ast":null,"code":"var _jsxFileName = \"/Users/ian/Development/cloned_repos/leg_up/activity_tracker/src/components/Activities.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport MeditationTable from \"./Tables/MeditationTable\";\nimport YogaTable from \"./Tables/YogaTable\";\nimport CardioTable from \"./Tables/CardioTable\";\nimport MeditationChart from \"./Charts/MeditationChart\";\nimport YogaChart from \"./Charts/YogaChart\";\nimport CardioChart from \"./Charts/CardioChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst backend_API = `http://localhost:3000/activities`;\n\nfunction Activities({\n  currentUser,\n  setCurrentUser\n}) {\n  _s();\n\n  const [activityHash, setActivityHash] = useState(null);\n  const [activity, setActivity] = useState(\"\");\n  const [selected, setSelected] = useState(false);\n  const activityOptions = [{\n    value: \"meditation\",\n    label: \"üßò Meditation\"\n  }, {\n    value: \"yoga\",\n    label: \"ü§∏‚Äç‚ôÇÔ∏è Yoga\"\n  }, {\n    value: \"cardio\",\n    label: \"üèÉüèΩ Cardio\"\n  }];\n  const meditationSessions = [];\n  const yogaSessions = [];\n  const cardioSessions = [];\n  const meditationLabels = [];\n  const yogaLabels = [];\n  const cardioLabels = [];\n  const meditationTime = [];\n  const yogaTime = [];\n  const cardioTime = [];\n\n  if (activityHash) {\n    console.log(activity);\n    console.log('activity hash has length');\n\n    for (let i = 0; i < activityHash.length; i++) {\n      if (activityHash[i].name === \"meditation\") {\n        meditationLabels.push(activityHash[i].date);\n        meditationSessions.push(activityHash[i]);\n        meditationTime.push(activityHash[i].minutes);\n      } else if (activityHash[i].name === \"yoga\") {\n        yogaLabels.push(activityHash[i].date);\n        yogaSessions.push(activityHash[i]);\n        yogaTime.push(activityHash[i].minutes);\n      } else if (activityHash[i].name === \"cardio\") {\n        cardioLabels.push(activityHash[i].date);\n        cardioSessions.push(activityHash[i]);\n        cardioTime.push(activityHash[i].minutes);\n      }\n    }\n  } else console.log('activity hash is empty');\n\n  function handleMeditationSubmit(e) {\n    e.preventDefault();\n    console.log('current user id:', currentUser.id);\n    const user_id = currentUser.id;\n    const date = e.target.date.value;\n    const name = activity;\n    const minutes = e.target.minutes.value;\n    const notes = e.target.notes.value;\n    fetch(`${backend_API}`, {\n      method: \"POST\",\n      headers: {\n        Accepts: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      },\n      body: JSON.stringify({\n        user_id,\n        date,\n        name,\n        minutes,\n        notes\n      })\n    }).then(() => {\n      fetch(`${backend_API}`, {\n        method: \"GET\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      }).then(res => res.json()).then(data => {\n        console.log(\"data:\", data);\n        setActivityHash(data);\n        console.log(\"setting activity hash to data:\", activityHash);\n        console.log(\"length of activity hash:\", activityHash.length);\n      });\n    });\n  }\n\n  console.log('Activity Hash:', activityHash);\n\n  function handleYogaSubmit(e) {\n    e.preventDefault();\n    setActivityHash([]);\n    const date = e.target.date.value;\n    const name = activity;\n    const yoga_type = e.target.yoga_type.value;\n    const minutes = e.target.minutes.value;\n    const notes = e.target.notes.value;\n    fetch(`${backend_API}`, {\n      method: \"POST\",\n      headers: {\n        Accepts: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      },\n      body: JSON.stringify({\n        date,\n        name,\n        yoga_type,\n        minutes,\n        notes\n      })\n    }).then(() => {\n      fetch(`${backend_API}`, {\n        method: \"GET\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      }).then(res => res.json()).then(data => {\n        setActivityHash(data);\n      });\n    });\n  }\n\n  function handleCardioSubmit(e) {\n    e.preventDefault();\n    setActivityHash([]);\n    const date = e.target.date.value;\n    const name = activity;\n    const workout = e.target.workout.value;\n    const distance = e.target.distance.value;\n    const minutes = e.target.minutes.value;\n    const notes = e.target.notes.value;\n    fetch(`${backend_API}`, {\n      method: \"POST\",\n      headers: {\n        Accepts: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      },\n      body: JSON.stringify({\n        date,\n        name,\n        workout,\n        distance,\n        minutes,\n        notes\n      })\n    }).then(() => {\n      fetch(`${backend_API}`, {\n        method: \"GET\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      }).then(res => res.json()).then(data => {\n        setActivityHash(data);\n      });\n    });\n  }\n\n  function askToDelete(e, a) {\n    e.preventDefault();\n    window.confirm(`Delete ${activity} from database?`);\n\n    if (window.confirm) {\n      fetch(`${backend_API}/${a.id}`, {\n        method: \"DELETE\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      }).then(() => {\n        fetch(`${backend_API}`, {\n          method: \"GET\",\n          headers: {\n            Accepts: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        }).then(res => res.json()).then(data => {\n          setActivityHash(data);\n        });\n      });\n    }\n  }\n\n  if (localStorage.getItem('token')) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome_blurb\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Down to meditate? Into yoga? Always on the move? Get a Leg-Up on life by logging your self-care sessions using the menu below, so you can keep track of your self-care practice.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"activity_div\",\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          className: \"activity_dropdown\",\n          autofocus: true,\n          isSearchable: true,\n          placeholder: \"Select an activity to submit new sessions, and see your progress!\",\n          options: activityOptions,\n          onChange: e => {\n            fetch(`${backend_API}`, {\n              method: \"GET\",\n              headers: {\n                Accepts: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n              }\n            }).then(res => res.json()).then(data => {\n              console.log(data);\n              setActivityHash(data);\n              setSelected(true);\n              console.log(\"e.value:\", e.value);\n              setActivity(e.value);\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 9\n        }, this), selected ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forms\",\n          children: [activity === \"meditation\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"form\",\n              onSubmit: handleMeditationSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: \"Meditation Session:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inputs\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"date\",\n                  placeholder: \"MM/DD/YYYY\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  name: \"minutes\",\n                  placeholder: \"Time (minutes)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"notes\",\n                  placeholder: \"Notes?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this), meditationSessions.length ? /*#__PURE__*/_jsxDEV(MeditationChart, {\n              meditationLabels: meditationLabels,\n              meditationTime: meditationTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this) : null, /*#__PURE__*/_jsxDEV(MeditationTable, {\n              meditationSessions: meditationSessions,\n              askToDelete: askToDelete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : null, activity === \"yoga\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"form\",\n              onSubmit: handleYogaSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: \"Yoga Session:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inputs\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"date\",\n                  placeholder: \"MM/DD/YYYY\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"yoga_type\",\n                  placeholder: \"Type (Hatha, etc)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  name: \"minutes\",\n                  placeholder: \"Time (minutes)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"notes\",\n                  placeholder: \"Notes?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this), yogaSessions.length ? /*#__PURE__*/_jsxDEV(YogaChart, {\n              yogaLabels: yogaLabels,\n              yogaTime: yogaTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 19\n            }, this) : null, /*#__PURE__*/_jsxDEV(YogaTable, {\n              yogaSessions: yogaSessions,\n              askToDelete: askToDelete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : null, activity === \"cardio\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"form\",\n              onSubmit: handleCardioSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: \"Cardio workout:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inputs\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"date\",\n                  placeholder: \"MM/DD/YYYY\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"workout\",\n                  placeholder: \"Type (walk/run/hike)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  name: \"distance\",\n                  placeholder: \"Distance (miles)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  name: \"minutes\",\n                  placeholder: \"Time (minutes)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"notes\",\n                  placeholder: \"Notes?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this), cardioSessions.length ? /*#__PURE__*/_jsxDEV(CardioChart, {\n              cardioLabels: cardioLabels,\n              cardioTime: cardioTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 19\n            }, this) : null, /*#__PURE__*/_jsxDEV(CardioTable, {\n              cardioSessions: cardioSessions,\n              askToDelete: askToDelete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"please_login\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Please log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 5\n    }, this);\n  }\n}\n\n_s(Activities, \"rd6RPmNvoQZTI0S5JpD3BltBPUg=\");\n\n_c = Activities;\nexport default Activities;\n\nvar _c;\n\n$RefreshReg$(_c, \"Activities\");","map":{"version":3,"sources":["/Users/ian/Development/cloned_repos/leg_up/activity_tracker/src/components/Activities.js"],"names":["React","useState","Select","MeditationTable","YogaTable","CardioTable","MeditationChart","YogaChart","CardioChart","backend_API","Activities","currentUser","setCurrentUser","activityHash","setActivityHash","activity","setActivity","selected","setSelected","activityOptions","value","label","meditationSessions","yogaSessions","cardioSessions","meditationLabels","yogaLabels","cardioLabels","meditationTime","yogaTime","cardioTime","console","log","i","length","name","push","date","minutes","handleMeditationSubmit","e","preventDefault","id","user_id","target","notes","fetch","method","headers","Accepts","Authorization","localStorage","getItem","body","JSON","stringify","then","res","json","data","handleYogaSubmit","yoga_type","handleCardioSubmit","workout","distance","askToDelete","a","window","confirm"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport MeditationTable from \"./Tables/MeditationTable\";\nimport YogaTable from \"./Tables/YogaTable\";\nimport CardioTable from \"./Tables/CardioTable\";\nimport MeditationChart from \"./Charts/MeditationChart\";\nimport YogaChart from \"./Charts/YogaChart\";\nimport CardioChart from \"./Charts/CardioChart\";\nconst backend_API = `http://localhost:3000/activities`;\n\nfunction Activities({ currentUser, setCurrentUser }) {\n  const [activityHash, setActivityHash] = useState(null);\n  const [activity, setActivity] = useState(\"\");\n  const [selected, setSelected] = useState(false);\n\n  const activityOptions = [\n    { value: \"meditation\", label: \"üßò Meditation\" },\n    { value: \"yoga\", label: \"ü§∏‚Äç‚ôÇÔ∏è Yoga\" },\n    { value: \"cardio\", label: \"üèÉüèΩ Cardio\" },\n  ];\n\n  const meditationSessions = [];\n  const yogaSessions = [];\n  const cardioSessions = [];\n\n  const meditationLabels = [];\n  const yogaLabels = [];\n  const cardioLabels = [];\n\n  const meditationTime = [];\n  const yogaTime = [];\n  const cardioTime = [];\n\n  if (activityHash) {\n    console.log(activity)\n    console.log('activity hash has length')\n    for (let i = 0; i < activityHash.length; i++) {\n      if (activityHash[i].name === \"meditation\") {\n        meditationLabels.push(activityHash[i].date);\n        meditationSessions.push(activityHash[i]);\n        meditationTime.push(activityHash[i].minutes);\n      } else if (activityHash[i].name === \"yoga\") {\n        yogaLabels.push(activityHash[i].date);\n        yogaSessions.push(activityHash[i]);\n        yogaTime.push(activityHash[i].minutes);\n      } else if (activityHash[i].name === \"cardio\") {\n        cardioLabels.push(activityHash[i].date);\n        cardioSessions.push(activityHash[i]);\n        cardioTime.push(activityHash[i].minutes);\n      }\n    }\n  } else console.log('activity hash is empty')\n\n  function handleMeditationSubmit(e) {\n    e.preventDefault();\n\n    console.log('current user id:', currentUser.id)\n    const user_id = currentUser.id\n    const date = e.target.date.value;\n    const name = activity;\n    const minutes = e.target.minutes.value;\n    const notes = e.target.notes.value;\n\n    fetch(`${backend_API}`, {\n      method: \"POST\",\n      headers: {\n        Accepts: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      },\n      body: JSON.stringify({\n        user_id,\n        date,\n        name,\n        minutes,\n        notes,\n      }),\n    }).then(() => {\n      fetch(`${backend_API}`, {\n        method: \"GET\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(\"data:\", data);\n          setActivityHash(data);\n\n          console.log(\"setting activity hash to data:\", activityHash)\n          console.log(\"length of activity hash:\", activityHash.length)\n        });\n    });\n  }\n\n  console.log('Activity Hash:', activityHash)\n\n  function handleYogaSubmit(e) {\n    e.preventDefault();\n    setActivityHash([]);\n\n    const date = e.target.date.value;\n    const name = activity;\n    const yoga_type = e.target.yoga_type.value;\n    const minutes = e.target.minutes.value;\n    const notes = e.target.notes.value;\n\n    fetch(`${backend_API}`, {\n      method: \"POST\",\n      headers: {\n        Accepts: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      },\n      body: JSON.stringify({\n        date,\n        name,\n        yoga_type,\n        minutes,\n        notes,\n      }),\n    }).then(() => {\n      fetch(`${backend_API}`, {\n        method: \"GET\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setActivityHash(data);\n        });\n    });\n  }\n\n  function handleCardioSubmit(e) {\n    e.preventDefault();\n    setActivityHash([]);\n\n    const date = e.target.date.value;\n    const name = activity;\n    const workout = e.target.workout.value;\n    const distance = e.target.distance.value;\n    const minutes = e.target.minutes.value;\n    const notes = e.target.notes.value;\n\n    fetch(`${backend_API}`, {\n      method: \"POST\",\n      headers: {\n        Accepts: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      },\n      body: JSON.stringify({\n        date,\n        name,\n        workout,\n        distance,\n        minutes,\n        notes,\n      }),\n    }).then(() => {\n      fetch(`${backend_API}`, {\n        method: \"GET\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setActivityHash(data);\n        });\n    });\n  }\n\n  function askToDelete(e, a) {\n    e.preventDefault();\n    window.confirm(`Delete ${activity} from database?`);\n    if (window.confirm) {\n      fetch(`${backend_API}/${a.id}`, {\n        method: \"DELETE\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      }).then(() => {\n        fetch(`${backend_API}`, {\n          method: \"GET\",\n          headers: {\n            Accepts: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n        })\n          .then((res) => res.json())\n          .then((data) => {\n            setActivityHash(data);\n          });\n      });\n    }\n  }\n\n  if (localStorage.getItem('token')) {\n  return (\n    <>\n      <div className=\"welcome_blurb\">\n        <h5>\n          Down to meditate? Into yoga? Always on the move? Get a Leg-Up on life\n          by logging your self-care sessions using the menu below, so you can\n          keep track of your self-care practice.\n        </h5>\n      </div>\n      <div className=\"activity_div\">\n        <Select\n          className=\"activity_dropdown\"\n          autofocus\n          isSearchable\n          placeholder=\"Select an activity to submit new sessions, and see your progress!\"\n          options={activityOptions}\n          onChange={(e) => {\n            fetch(`${backend_API}`, {\n              method: \"GET\",\n              headers: {\n                Accepts: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n              },\n            })\n              .then((res) => res.json())\n              .then((data) => {\n                console.log(data);\n                setActivityHash(data);\n                setSelected(true);\n                console.log(\"e.value:\", e.value)\n                setActivity(e.value);\n              });\n          }}\n        />\n        {selected ? (\n          <div className=\"forms\">\n            {activity === \"meditation\" ? (\n              <>\n                <form className=\"form\" onSubmit={handleMeditationSubmit}>\n                  <label htmlFor=\"name\">Meditation Session:</label>\n                  <div className=\"inputs\">\n                    <input type=\"text\" name=\"date\" placeholder=\"MM/DD/YYYY\" />\n                    <input\n                      type=\"number\"\n                      name=\"minutes\"\n                      placeholder=\"Time (minutes)\"\n                    />\n                    <input type=\"text\" name=\"notes\" placeholder=\"Notes?\" />\n                    <button type=\"submit\">Submit</button>\n                  </div>\n                </form>\n                {meditationSessions.length ? (\n                  <MeditationChart\n                    meditationLabels={meditationLabels}\n                    meditationTime={meditationTime}\n                  />\n                ) : null}\n                <MeditationTable\n                  meditationSessions={meditationSessions}\n                  askToDelete={askToDelete}\n                />\n              </>\n            ) : null}\n            {activity === \"yoga\" ? (\n              <>\n                <form className=\"form\" onSubmit={handleYogaSubmit}>\n                  <label htmlFor=\"name\">Yoga Session:</label>\n                  <div className=\"inputs\">\n                    <input type=\"text\" name=\"date\" placeholder=\"MM/DD/YYYY\" />\n                    <input\n                      type=\"text\"\n                      name=\"yoga_type\"\n                      placeholder=\"Type (Hatha, etc)\"\n                    />\n                    <input\n                      type=\"number\"\n                      name=\"minutes\"\n                      placeholder=\"Time (minutes)\"\n                    />\n                    <input type=\"text\" name=\"notes\" placeholder=\"Notes?\" />\n                    <button type=\"submit\">Submit</button>\n                  </div>\n                </form>\n                {yogaSessions.length ? (\n                  <YogaChart yogaLabels={yogaLabels} yogaTime={yogaTime} />\n                ) : null}\n                <YogaTable\n                  yogaSessions={yogaSessions}\n                  askToDelete={askToDelete}\n                />\n              </>\n            ) : null}\n            {activity === \"cardio\" ? (\n              <>\n                <form className=\"form\" onSubmit={handleCardioSubmit}>\n                  <label htmlFor=\"name\">Cardio workout:</label>\n                  <div className=\"inputs\">\n                    <input type=\"text\" name=\"date\" placeholder=\"MM/DD/YYYY\" />\n                    <input\n                      type=\"text\"\n                      name=\"workout\"\n                      placeholder=\"Type (walk/run/hike)\"\n                    />\n                    <input\n                      type=\"number\"\n                      name=\"distance\"\n                      placeholder=\"Distance (miles)\"\n                    />\n                    <input\n                      type=\"number\"\n                      name=\"minutes\"\n                      placeholder=\"Time (minutes)\"\n                    />\n                    <input type=\"text\" name=\"notes\" placeholder=\"Notes?\" />\n                    <button type=\"submit\">Submit</button>\n                  </div>\n                </form>\n                {cardioSessions.length ? (\n                  <CardioChart\n                    cardioLabels={cardioLabels}\n                    cardioTime={cardioTime}\n                  />\n                ) : null}\n                <CardioTable\n                  cardioSessions={cardioSessions}\n                  askToDelete={askToDelete}\n                />\n              </>\n            ) : null}\n          </div>\n        ) : null}\n      </div>\n    </>\n  )\n} else {\n  return (\n    <div id=\"please_login\">\n      <h5>Please log in</h5>\n    </div>\n  );\n}\n}\n\nexport default Activities;\n"]},"metadata":{},"sourceType":"module"}