{"ast":null,"code":"var _jsxFileName = \"/Users/ian/Development/cloned_repos/leg_up/activity_tracker/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport Meditations from \"./Activities/Meditations\";\nimport CardioTable from \"./Tables/CardioTable\";\nimport CardioChart from \"./Charts/CardioChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst backend_API = `http://localhost:3000/activities`;\n\nfunction Home({\n  currentUser\n}) {\n  _s();\n\n  const [activityHash, setActivityHash] = useState(null);\n  const [activity, setActivity] = useState(\"\");\n  const [selected, setSelected] = useState(false);\n  console.log('current user:', currentUser);\n  const activityOptions = [{\n    value: \"meditation\",\n    label: \"üßò Meditation\"\n  }, {\n    value: \"yoga\",\n    label: \"ü§∏‚Äç‚ôÇÔ∏è Yoga\"\n  }, {\n    value: \"cardio\",\n    label: \"üèÉüèΩ Cardio\"\n  }];\n  const cardioSessions = [];\n  const cardioLabels = [];\n  const cardioTime = [];\n\n  if (activityHash) {\n    for (let i = 0; i < activityHash.length; i++) {\n      if (activityHash[i].name === \"meditation\") {\n        meditationLabels.push(activityHash[i].date);\n        meditationSessions.push(activityHash[i]);\n        meditationTime.push(activityHash[i].minutes);\n      } else if (activityHash[i].name === \"yoga\") {\n        yogaLabels.push(activityHash[i].date);\n        yogaSessions.push(activityHash[i]);\n        yogaTime.push(activityHash[i].minutes);\n      } else if (activityHash[i].name === \"cardio\") {\n        cardioLabels.push(activityHash[i].date);\n        cardioSessions.push(activityHash[i]);\n        cardioTime.push(activityHash[i].minutes);\n      }\n    }\n  }\n\n  function handleCardioSubmit(e) {\n    e.preventDefault();\n    setActivityHash([]);\n    const user_id = currentUser.id;\n    const date = e.target.date.value;\n    const name = activity;\n    const workout = e.target.workout.value;\n    const distance = e.target.distance.value;\n    const minutes = e.target.minutes.value;\n    const notes = e.target.notes.value;\n    fetch(`${backend_API}`, {\n      method: \"POST\",\n      headers: {\n        Accepts: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      },\n      body: JSON.stringify({\n        user_id,\n        name,\n        date,\n        workout,\n        distance,\n        minutes,\n        notes\n      })\n    }).then(() => {\n      fetch(`${backend_API}`, {\n        method: \"GET\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      }).then(res => res.json()).then(data => {\n        setActivityHash(data);\n      });\n    });\n  }\n\n  function askToDelete(e, meditation) {\n    e.preventDefault();\n    window.confirm(`Delete ${activity} from database?`);\n\n    if (window.confirm) {\n      fetch(`${backend_API}/${meditation.id}`, {\n        method: \"DELETE\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      }).then(() => {\n        fetch(`${backend_API}`, {\n          method: \"GET\",\n          headers: {\n            Accepts: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        }).then(res => res.json()).then(data => {\n          setActivityHash(data);\n        });\n      });\n    }\n  }\n\n  if (localStorage.getItem('token')) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome_blurb\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Welcome, \", localStorage.getItem(\"current user\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Down to meditate? Into yoga? Always on the move? Get a Leg-Up on life by logging your self-care sessions using the menu below, so you can keep track of your self-care practice.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"activity_div\",\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          className: \"activity_dropdown\",\n          autofocus: true,\n          isSearchable: true,\n          placeholder: \"Select an activity to submit new sessions, and see your progress!\",\n          options: activityOptions,\n          onChange: e => {\n            fetch(`${backend_API}`, {\n              method: \"GET\",\n              headers: {\n                Accepts: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n              }\n            }).then(res => res.json()).then(data => {\n              console.log(data);\n              setActivityHash(data);\n              setSelected(true);\n              setActivity(e.value);\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this), selected ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forms\",\n          children: [activity === \"meditation\" ? /*#__PURE__*/_jsxDEV(Meditations, {\n            currentUser: currentUser,\n            activity: activity,\n            activityHash: activityHash,\n            setActivityHash: setActivityHash,\n            askToDelete: askToDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this) : null, activity === \"yoga\" ? /*#__PURE__*/_jsxDEV(Yogas, {\n            currentUser: currentUser,\n            activity: activity,\n            activityHash: activityHash,\n            setActivityHash: setActivityHash,\n            askToDelete: askToDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this) : null, activity === \"cardio\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"form\",\n              onSubmit: handleCardioSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: \"Cardio workout:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inputs\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"date\",\n                  placeholder: \"MM/DD/YYYY\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"workout\",\n                  placeholder: \"Type (walk/run/hike)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  name: \"distance\",\n                  placeholder: \"Distance (miles)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  name: \"minutes\",\n                  placeholder: \"Time (minutes)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"notes\",\n                  placeholder: \"Notes?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), cardioSessions.length ? /*#__PURE__*/_jsxDEV(CardioChart, {\n              cardioLabels: cardioLabels,\n              cardioTime: cardioTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this) : null, /*#__PURE__*/_jsxDEV(CardioTable, {\n              cardioSessions: cardioSessions,\n              askToDelete: askToDelete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"please_login\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Please log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 5\n    }, this);\n  }\n}\n\n_s(Home, \"rd6RPmNvoQZTI0S5JpD3BltBPUg=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/ian/Development/cloned_repos/leg_up/activity_tracker/src/components/Home.js"],"names":["React","useState","Select","Meditations","CardioTable","CardioChart","backend_API","Home","currentUser","activityHash","setActivityHash","activity","setActivity","selected","setSelected","console","log","activityOptions","value","label","cardioSessions","cardioLabels","cardioTime","i","length","name","meditationLabels","push","date","meditationSessions","meditationTime","minutes","yogaLabels","yogaSessions","yogaTime","handleCardioSubmit","e","preventDefault","user_id","id","target","workout","distance","notes","fetch","method","headers","Accepts","Authorization","localStorage","getItem","body","JSON","stringify","then","res","json","data","askToDelete","meditation","window","confirm"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport Meditations from \"./Activities/Meditations\";\nimport CardioTable from \"./Tables/CardioTable\";\nimport CardioChart from \"./Charts/CardioChart\";\nconst backend_API = `http://localhost:3000/activities`;\n\nfunction Home({ currentUser }) {\n  const [activityHash, setActivityHash] = useState(null);\n  const [activity, setActivity] = useState(\"\");\n  const [selected, setSelected] = useState(false);\n\n  console.log('current user:', currentUser)\n\n  const activityOptions = [\n    { value: \"meditation\", label: \"üßò Meditation\" },\n    { value: \"yoga\", label: \"ü§∏‚Äç‚ôÇÔ∏è Yoga\" },\n    { value: \"cardio\", label: \"üèÉüèΩ Cardio\" },\n  ];\n\n  const cardioSessions = [];\n\n  const cardioLabels = [];\n\n  const cardioTime = [];\n\n  if (activityHash) {\n    for (let i = 0; i < activityHash.length; i++) {\n      if (activityHash[i].name === \"meditation\") {\n        meditationLabels.push(activityHash[i].date);\n        meditationSessions.push(activityHash[i]);\n        meditationTime.push(activityHash[i].minutes);\n      } else if (activityHash[i].name === \"yoga\") {\n        yogaLabels.push(activityHash[i].date);\n        yogaSessions.push(activityHash[i]);\n        yogaTime.push(activityHash[i].minutes);\n      } else if (activityHash[i].name === \"cardio\") {\n        cardioLabels.push(activityHash[i].date);\n        cardioSessions.push(activityHash[i]);\n        cardioTime.push(activityHash[i].minutes);\n      }\n    }\n  }\n\n  function handleCardioSubmit(e) {\n    e.preventDefault();\n    setActivityHash([]);\n\n    const user_id = currentUser.id\n    const date = e.target.date.value;\n    const name = activity;\n    const workout = e.target.workout.value;\n    const distance = e.target.distance.value;\n    const minutes = e.target.minutes.value;\n    const notes = e.target.notes.value;\n\n    fetch(`${backend_API}`, {\n      method: \"POST\",\n      headers: {\n        Accepts: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      },\n      body: JSON.stringify({\n        user_id,\n        name,\n        date,\n        workout,\n        distance,\n        minutes,\n        notes,\n      }),\n    }).then(() => {\n      fetch(`${backend_API}`, {\n        method: \"GET\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setActivityHash(data);\n        });\n    });\n  }\n\n  function askToDelete(e, meditation) {\n    e.preventDefault();\n\n    window.confirm(`Delete ${activity} from database?`);\n\n    if (window.confirm) {\n      fetch(`${backend_API}/${meditation.id}`, {\n        method: \"DELETE\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      }).then(() => {\n        fetch(`${backend_API}`, {\n          method: \"GET\",\n          headers: {\n            Accepts: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n        })\n          .then((res) => res.json())\n          .then((data) => {\n            setActivityHash(data);\n          });\n      });\n    }\n  }\n\n  if (localStorage.getItem('token')) {\n  return (\n    <>\n      <div className=\"welcome_blurb\">\n        <h5>Welcome, {localStorage.getItem(\"current user\")}</h5>\n        <h5>\n          Down to meditate? Into yoga? Always on the move? Get a Leg-Up on life\n          by logging your self-care sessions using the menu below, so you can\n          keep track of your self-care practice.\n        </h5>\n      </div>\n      <div className=\"activity_div\">\n        <Select\n          className=\"activity_dropdown\"\n          autofocus\n          isSearchable\n          placeholder=\"Select an activity to submit new sessions, and see your progress!\"\n          options={activityOptions}\n          onChange={(e) => {\n            fetch(`${backend_API}`, {\n              method: \"GET\",\n              headers: {\n                Accepts: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n              },\n            })\n              .then((res) => res.json())\n              .then((data) => {\n                console.log(data);\n                setActivityHash(data);\n                setSelected(true);\n                setActivity(e.value);\n              });\n          }}\n        />\n        {selected ? (\n          <div className=\"forms\">\n            {activity === \"meditation\" ? (\n              <Meditations currentUser={currentUser} activity={activity} activityHash={activityHash} setActivityHash={setActivityHash} askToDelete={askToDelete} />\n            ) : null}\n            {activity === \"yoga\" ? (\n              <Yogas currentUser={currentUser} activity={activity} activityHash={activityHash} setActivityHash={setActivityHash} askToDelete={askToDelete} />\n            ) : null}\n            {activity === \"cardio\" ? (\n              <>\n                <form className=\"form\" onSubmit={handleCardioSubmit}>\n                  <label htmlFor=\"name\">Cardio workout:</label>\n                  <div className=\"inputs\">\n                    <input type=\"text\" name=\"date\" placeholder=\"MM/DD/YYYY\" />\n                    <input\n                      type=\"text\"\n                      name=\"workout\"\n                      placeholder=\"Type (walk/run/hike)\"\n                    />\n                    <input\n                      type=\"number\"\n                      name=\"distance\"\n                      placeholder=\"Distance (miles)\"\n                    />\n                    <input\n                      type=\"number\"\n                      name=\"minutes\"\n                      placeholder=\"Time (minutes)\"\n                    />\n                    <input type=\"text\" name=\"notes\" placeholder=\"Notes?\" />\n                    <button type=\"submit\">Submit</button>\n                  </div>\n                </form>\n                {cardioSessions.length ? (\n                  <CardioChart\n                    cardioLabels={cardioLabels}\n                    cardioTime={cardioTime}\n                  />\n                ) : null}\n                <CardioTable\n                  cardioSessions={cardioSessions}\n                  askToDelete={askToDelete}\n                />\n              </>\n            ) : null}\n          </div>\n        ) : null}\n      </div>\n    </>\n  )\n} else {\n  return (\n    <div id=\"please_login\">\n      <h5>Please log in</h5>\n    </div>\n  );\n}\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}