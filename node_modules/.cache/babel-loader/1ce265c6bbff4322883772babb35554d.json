{"ast":null,"code":"var _jsxFileName = \"/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport PrepMeditationTable from \"./PrepMeditationTable\";\nimport PrepYogaTable from \"./PrepYogaTable\";\nimport PrepCardioTable from \"./PrepCardioTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst backend_API = `http://localhost:3000/activities`;\nexport default function Main({\n  header,\n  handleActivitySubmit\n}) {\n  _s();\n\n  const [activityHash, setActivityHash] = useState([]);\n  const [activity, setActivity] = useState(\"\");\n  const activityOptions = [{\n    value: \"meditation\",\n    label: \"🧘 Meditation\"\n  }, {\n    value: \"yoga\",\n    label: \"🤸‍♂️ Yoga\"\n  }, {\n    value: \"cardio\",\n    label: \"🏃🏽 Cardio\"\n  }];\n\n  function selectActivity(e) {\n    setActivity(e.value);\n  }\n\n  function handleMeditationSubmit(e) {\n    e.preventDefault();\n    const name = activity;\n    const minutes = e.target.minutes.value;\n    const notes = e.target.notes.value;\n    fetch(`${backend_API}`, {\n      method: \"POST\",\n      headers: {\n        Accepts: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      },\n      body: JSON.stringify({\n        name,\n        minutes,\n        notes\n      })\n    }).then(() => {\n      fetch(`${backend_API}`, {\n        method: \"GET\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n        }\n      }).then(res => res.json()).then(data => {\n        setActivityHash(data);\n      });\n    });\n  }\n\n  function handleYogaSubmit(e) {\n    e.preventDefault();\n    setActivityHash([]);\n    const name = activity;\n    const yoga_type = e.target.yoga_type.value;\n    const minutes = e.target.minutes.value;\n    const notes = e.target.notes.value;\n    fetch(`${backend_API}`, {\n      method: \"POST\",\n      headers: {\n        Accepts: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      },\n      body: JSON.stringify({\n        name,\n        yoga_type,\n        minutes,\n        notes\n      })\n    }).then(() => {\n      fetch(`${backend_API}`, {\n        method: \"GET\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n        }\n      }).then(res => res.json()).then(data => {\n        setActivityHash(data);\n      });\n    });\n  }\n\n  function handleCardioSubmit(e) {\n    e.preventDefault();\n    setActivityHash([]);\n    const name = activity;\n    const workout = e.target.workout.value;\n    const distance = e.target.distance.value;\n    const minutes = e.target.minutes.value;\n    fetch(`${backend_API}`, {\n      method: \"POST\",\n      headers: {\n        Accepts: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      },\n      body: JSON.stringify({\n        name,\n        workout,\n        distance,\n        minutes\n      })\n    }).then(() => {\n      fetch(`${backend_API}`, {\n        method: \"GET\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n        }\n      }).then(res => res.json()).then(data => {\n        setActivityHash(data);\n      });\n    });\n  }\n\n  function askToDelete(e, a) {\n    e.preventDefault();\n    window.confirm(`Delete ${activity} from database?`);\n\n    if (window.confirm) {\n      fetch(`${backend_API}/${a.id}`, {\n        method: \"DELETE\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n        }\n      }).then(() => {\n        fetch(`${backend_API}`, {\n          method: \"GET\",\n          headers: {\n            Accepts: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n          }\n        }).then(res => res.json()).then(data => {\n          setActivityHash(data);\n        });\n      });\n    }\n  } // function updateActivity() {\n  //   fetch(`${backend_API}/${a.id}`, {\n  //     method: \"PATCH\",\n  //     headers: {\n  //       Accepts: \"application/json\",\n  //       \"Content-Type\": \"application/json\",\n  //       Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n  //     },\n  //   })\n  //     .then((r) => r.json())\n  //     .then((data) => console.log(data));\n  //   }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"site_info\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Down to meditate? Into yoga? Always on the move? Get a Leg-Up on life by logging your self-care sessions using the menu below, so you can keep track of your kick-ass routines as you do them.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      className: \"activity_dropdown\",\n      autofocus: true,\n      isSearchable: true,\n      placeholder: \"Select activity\",\n      options: activityOptions,\n      onChange: selectActivity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), activity === \"meditation\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleMeditationSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"name\",\n          children: \"Meditation Session:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"minutes\",\n          placeholder: \"Time (minutes)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"notes\",\n          placeholder: \"Notes (what did you notice?)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PrepMeditationTable, {\n        activity: activity,\n        activityHash: activityHash,\n        askToDelete: askToDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this) : null, activity === \"yoga\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleYogaSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"name\",\n          children: \"Yoga Session:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"yoga_type\",\n          placeholder: \"Type (Hatha, etc)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"minutes\",\n          placeholder: \"Time (minutes)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"notes\",\n          placeholder: \"Notes (tight, sore, etc.)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PrepYogaTable, {\n        activity: activity,\n        activityHash: activityHash,\n        askToDelete: askToDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }, this) : null, activity === \"cardio\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCardioSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"name\",\n          children: \"Cardio workout:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"workout\",\n          placeholder: \"Type (walk/run/hike)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"distance\",\n          placeholder: \"Distance (miles)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"minutes\",\n          placeholder: \"Time (minutes)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PrepCardioTable, {\n        activity: activity,\n        activityHash: activityHash,\n        askToDelete: askToDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"s1IhMVutwUmxrbeJdi4NVYbn6+g=\");\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/components/Home.js"],"names":["React","useState","Select","PrepMeditationTable","PrepYogaTable","PrepCardioTable","backend_API","Main","header","handleActivitySubmit","activityHash","setActivityHash","activity","setActivity","activityOptions","value","label","selectActivity","e","handleMeditationSubmit","preventDefault","name","minutes","target","notes","fetch","method","headers","Accepts","Authorization","localStorage","getItem","body","JSON","stringify","then","res","json","data","handleYogaSubmit","yoga_type","handleCardioSubmit","workout","distance","askToDelete","a","window","confirm","id"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport PrepMeditationTable from \"./PrepMeditationTable\";\nimport PrepYogaTable from \"./PrepYogaTable\";\nimport PrepCardioTable from \"./PrepCardioTable\";\nconst backend_API = `http://localhost:3000/activities`;\n\nexport default function Main({ header, handleActivitySubmit }) {\n  const [activityHash, setActivityHash] = useState([]);\n  const [activity, setActivity] = useState(\"\");\n\n  const activityOptions = [\n    { value: \"meditation\", label: \"🧘 Meditation\" },\n    { value: \"yoga\", label: \"🤸‍♂️ Yoga\" },\n    { value: \"cardio\", label: \"🏃🏽 Cardio\" },\n  ];\n\n  function selectActivity(e) {\n    setActivity(e.value);\n  }\n\n  function handleMeditationSubmit(e) {\n    e.preventDefault();\n\n    const name = activity;\n    const minutes = e.target.minutes.value;\n    const notes = e.target.notes.value;\n\n    fetch(`${backend_API}`, {\n      method: \"POST\",\n      headers: {\n        Accepts: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n      },\n      body: JSON.stringify({\n        name,\n        minutes,\n        notes,\n      }),\n    }).then(() => {\n      fetch(`${backend_API}`, {\n        method: \"GET\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n        },\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setActivityHash(data);\n        });\n    });\n  }\n\n  function handleYogaSubmit(e) {\n    e.preventDefault();\n    setActivityHash([]);\n\n    const name = activity;\n    const yoga_type = e.target.yoga_type.value;\n    const minutes = e.target.minutes.value;\n    const notes = e.target.notes.value;\n\n    fetch(`${backend_API}`, {\n      method: \"POST\",\n      headers: {\n        Accepts: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n      },\n      body: JSON.stringify({\n        name,\n        yoga_type,\n        minutes,\n        notes,\n      }),\n    }).then(() => {\n      fetch(`${backend_API}`, {\n        method: \"GET\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n        },\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setActivityHash(data);\n        });\n    });\n  }\n\n  function handleCardioSubmit(e) {\n    e.preventDefault();\n    setActivityHash([]);\n\n    const name = activity;\n    const workout = e.target.workout.value;\n    const distance = e.target.distance.value;\n    const minutes = e.target.minutes.value;\n\n    fetch(`${backend_API}`, {\n      method: \"POST\",\n      headers: {\n        Accepts: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n      },\n      body: JSON.stringify({\n        name,\n        workout,\n        distance,\n        minutes,\n      }),\n    }).then(() => {\n      fetch(`${backend_API}`, {\n        method: \"GET\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n        },\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setActivityHash(data);\n        });\n    });\n  }\n\n  function askToDelete(e, a) {\n    e.preventDefault();\n    window.confirm(`Delete ${activity} from database?`);\n    if (window.confirm) {\n      fetch(`${backend_API}/${a.id}`, {\n        method: \"DELETE\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n        },\n      }).then(() => {\n        fetch(`${backend_API}`, {\n          method: \"GET\",\n          headers: {\n            Accepts: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n          },\n        })\n          .then((res) => res.json())\n          .then((data) => {\n            setActivityHash(data);\n          });\n      });\n    }\n  }\n\n  // function updateActivity() {\n  //   fetch(`${backend_API}/${a.id}`, {\n  //     method: \"PATCH\",\n  //     headers: {\n  //       Accepts: \"application/json\",\n  //       \"Content-Type\": \"application/json\",\n  //       Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n  //     },\n  //   })\n  //     .then((r) => r.json())\n  //     .then((data) => console.log(data));\n  //   }\n\n  return (\n    <div>\n      <div className=\"header\">{header}</div>\n      <div className=\"site_info\">\n        <p>\n          Down to meditate? Into yoga? Always on the move? Get a Leg-Up on life\n          by logging your self-care sessions using the menu below, so you can\n          keep track of your kick-ass routines as you do them.\n        </p>\n      </div>\n      <Select\n        className=\"activity_dropdown\"\n        autofocus\n        isSearchable\n        placeholder=\"Select activity\"\n        options={activityOptions}\n        onChange={selectActivity}\n      />\n      {activity === \"meditation\" ? (\n        <div>\n          <form onSubmit={handleMeditationSubmit}>\n            <label for=\"name\">Meditation Session:</label>\n            <input type=\"number\" name=\"minutes\" placeholder=\"Time (minutes)\" />\n            <input\n              type=\"text\"\n              name=\"notes\"\n              placeholder=\"Notes (what did you notice?)\"\n            />\n            <button type=\"submit\">Submit</button>\n          </form>\n          <PrepMeditationTable\n            activity={activity}\n            activityHash={activityHash}\n            askToDelete={askToDelete}\n          />\n        </div>\n      ) : null}\n      {activity === \"yoga\" ? (\n        <div>\n          <form onSubmit={handleYogaSubmit}>\n            <label for=\"name\">Yoga Session:</label>\n            <input\n              type=\"text\"\n              name=\"yoga_type\"\n              placeholder=\"Type (Hatha, etc)\"\n            />\n            <input type=\"number\" name=\"minutes\" placeholder=\"Time (minutes)\" />\n            <input\n              type=\"text\"\n              name=\"notes\"\n              placeholder=\"Notes (tight, sore, etc.)\"\n            />\n            <button type=\"submit\">Submit</button>\n          </form>\n          <PrepYogaTable\n            activity={activity}\n            activityHash={activityHash}\n            askToDelete={askToDelete}\n          />\n        </div>\n      ) : null}\n      {activity === \"cardio\" ? (\n        <div>\n          <form onSubmit={handleCardioSubmit}>\n            <label for=\"name\">Cardio workout:</label>\n            <input\n              type=\"text\"\n              name=\"workout\"\n              placeholder=\"Type (walk/run/hike)\"\n            />\n            <input\n              type=\"number\"\n              name=\"distance\"\n              placeholder=\"Distance (miles)\"\n            />\n            <input type=\"number\" name=\"minutes\" placeholder=\"Time (minutes)\" />\n            <button type=\"submit\">Submit</button>\n          </form>\n          <PrepCardioTable\n            activity={activity}\n            activityHash={activityHash}\n            askToDelete={askToDelete}\n          />\n        </div>\n      ) : null}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}