{"ast":null,"code":"var _jsxFileName = \"/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Select from \"react-select\";\nimport MeditationForm from \"./MeditationForm\";\nimport YogaForm from \"./YogaForm\";\nimport CardioForm from \"./CardioForm\";\nimport NewActivityForm from \"./NewActivityForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home({\n  header,\n  activity,\n  setActivity\n}) {\n  _s();\n\n  const initialOptions = [{\n    value: \"meditation\",\n    label: \"🧘 Meditation\"\n  }, {\n    value: \"yoga\",\n    label: \"🤸‍♂️ Yoga\"\n  }, {\n    value: \"cardio\",\n    label: \"🏃🏽 Cardio\"\n  }, {\n    value: \"create_new\",\n    label: \"✏️ Add your own activity!\"\n  }];\n  const [activityOptions, setActivityOptions] = useState(initialOptions);\n  useEffect(() => {\n    fetch(`/activities`).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error(\"Bad response\");\n      }\n    }).then(setActivityOptions).catch(err => {\n      console.log(`failed to fetch activities`);\n    });\n  }, []);\n\n  function updateActivity(e) {\n    console.log(\"inside update activity function\");\n    console.log(e.value);\n    setActivity(e.value);\n  }\n\n  function handleMeditationSubmit(e) {\n    e.preventDefault();\n    console.log(e.target); // POST request\n\n    fetch('/activities'), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify\n    };\n  }\n\n  function handleYogaSubmit(e) {\n    e.preventDefault();\n    console.log(e.target); // POST request\n  }\n\n  function handleCardioSubmit(e) {\n    e.preventDefault();\n    console.log(e.target); // POST request\n  }\n\n  function handleNewActivitySubmit(e) {\n    e.preventDefault();\n    console.log(e.target); // POST request\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"header\",\n      children: header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"site_info\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Down to meditate? Into yoga? Always on the move? Log your self-care sessions using the menu below, and keep track of your kick-ass routines as you practice. Or, add a new routine entirely. You do you!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      className: \"activity_dropdown\",\n      autofocus: true,\n      isSearchable: true,\n      placeholder: \"Select activity\" // onClick={fetchActivities()}\n      ,\n      onChange: updateActivity,\n      options: activityOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), activity === \"meditation\" ? /*#__PURE__*/_jsxDEV(MeditationForm, {\n      handleMeditationSubmit: handleMeditationSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this) : null, activity === \"yoga\" ? /*#__PURE__*/_jsxDEV(YogaForm, {\n      handleYogaSubmit: handleYogaSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this) : null, activity === \"cardio\" ? /*#__PURE__*/_jsxDEV(CardioForm, {\n      handleCardioSubmit: handleCardioSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this) : null, activity === \"create_new\" ? /*#__PURE__*/_jsxDEV(NewActivityForm, {\n      handleNewActivitySubmit: handleNewActivitySubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n} // Learn how to set state based on e.value\n// For monday: learn how to do a fetch on a click event\n// Create a form to be rendered for each activity selection\n// Learn how to update state upon setState if needed\n// code for later\n//   function customTheme(theme) {\n//       return {\n//           ...theme,\n//           colors: {\n//               ...theme.colors\n//           }\n//       }\n//   }\n\n_s(Home, \"7FSj4ahzJtWAKfqBBprtAbAz6/w=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/components/Home.js"],"names":["useEffect","useState","Select","MeditationForm","YogaForm","CardioForm","NewActivityForm","Home","header","activity","setActivity","initialOptions","value","label","activityOptions","setActivityOptions","fetch","then","response","ok","json","Error","catch","err","console","log","updateActivity","e","handleMeditationSubmit","preventDefault","target","method","headers","body","JSON","stringify","handleYogaSubmit","handleCardioSubmit","handleNewActivitySubmit"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Select from \"react-select\";\nimport MeditationForm from \"./MeditationForm\";\nimport YogaForm from \"./YogaForm\";\nimport CardioForm from \"./CardioForm\";\nimport NewActivityForm from \"./NewActivityForm\";\n\nexport default function Home({ header, activity, setActivity }) {\n  const initialOptions = [\n    { value: \"meditation\", label: \"🧘 Meditation\" },\n    { value: \"yoga\", label: \"🤸‍♂️ Yoga\" },\n    { value: \"cardio\", label: \"🏃🏽 Cardio\" },\n    { value: \"create_new\", label: \"✏️ Add your own activity!\" },\n  ];\n  const [activityOptions, setActivityOptions] = useState(initialOptions);\n\n  useEffect(() => {\n    fetch(`/activities`)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(\"Bad response\");\n        }\n      })\n      .then(setActivityOptions)\n      .catch((err) => {\n        console.log(`failed to fetch activities`);\n      });\n  }, []);\n\n  function updateActivity(e) {\n    console.log(\"inside update activity function\");\n    console.log(e.value)\n    setActivity(e.value);\n  }\n\n  function handleMeditationSubmit(e) {\n    e.preventDefault();\n    console.log(e.target);\n    // POST request\n    fetch('/activities'), {\n      method: 'POST', \n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify\n    }\n\n  }\n\n  function handleYogaSubmit(e) {\n    e.preventDefault();\n    console.log(e.target);\n    // POST request\n  }\n\n  function handleCardioSubmit(e) {\n    e.preventDefault();\n    console.log(e.target);\n    // POST request\n  }\n\n  function handleNewActivitySubmit(e) {\n    e.preventDefault();\n    console.log(e.target);\n    // POST request\n  }\n\n  return (\n    <div>\n      <div class=\"header\">{header}</div>\n      <div class=\"site_info\">\n        <p>\n          Down to meditate? Into yoga? Always on the move? Log your self-care\n          sessions using the menu below, and keep track of your kick-ass\n          routines as you practice. Or, add a new routine entirely. You do you!\n        </p>\n      </div>\n      <Select\n        className=\"activity_dropdown\"\n        autofocus\n        isSearchable\n        placeholder=\"Select activity\"\n        // onClick={fetchActivities()}\n        onChange={updateActivity}\n        options={activityOptions}\n      />\n      {activity === \"meditation\" ? (\n        <MeditationForm handleMeditationSubmit={handleMeditationSubmit} />\n      ) : null}\n      {activity === \"yoga\" ? (\n        <YogaForm handleYogaSubmit={handleYogaSubmit} />\n      ) : null}\n      {activity === \"cardio\" ? (\n        <CardioForm handleCardioSubmit={handleCardioSubmit} />\n      ) : null}\n      {activity === \"create_new\" ? (\n        <NewActivityForm handleNewActivitySubmit={handleNewActivitySubmit} />\n      ) : null}\n    </div>\n  );\n}\n\n// Learn how to set state based on e.value\n// For monday: learn how to do a fetch on a click event\n// Create a form to be rendered for each activity selection\n// Learn how to update state upon setState if needed\n\n// code for later\n//   function customTheme(theme) {\n//       return {\n//           ...theme,\n//           colors: {\n//               ...theme.colors\n//           }\n//       }\n//   }\n"]},"metadata":{},"sourceType":"module"}