{"ast":null,"code":"var _jsxFileName = \"/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/components/PrepMeditationTable.js\";\nimport React from \"react\";\nimport RenderMedActivity from \"./RenderMedActivity\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PrepMeditationTable({\n  activityHash,\n  askToDelete\n}) {\n  const meditationSessions = [];\n\n  if (activityHash.length) {\n    activityHash.forEach(activity => {\n      if (activity.name === \"meditation\") {\n        meditationSessions.push(activity);\n      }\n\n      ;\n    });\n    const table = meditationSessions.map(a => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [a.minutes, \" minutes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: a.notes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => askToDelete(e, a),\n            children: \"Delete activity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, a.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(RenderMedActivity, {\n      table: table\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  } else {\n    //   console.log('activity hash is empty')\n    return null;\n  }\n}\n_c = PrepMeditationTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrepMeditationTable\");","map":{"version":3,"sources":["/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/components/PrepMeditationTable.js"],"names":["React","RenderMedActivity","PrepMeditationTable","activityHash","askToDelete","meditationSessions","length","forEach","activity","name","push","table","map","a","minutes","notes","e","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,eAAe,SAASC,mBAAT,CAA6B;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAA7B,EAA4D;AAEzE,QAAMC,kBAAkB,GAAG,EAA3B;;AAEA,MAAIF,YAAY,CAACG,MAAjB,EAAyB;AACvBH,IAAAA,YAAY,CAACI,OAAb,CAAsBC,QAAD,IAAc;AACjC,UAAIA,QAAQ,CAACC,IAAT,KAAkB,YAAtB,EAAoC;AAChCJ,QAAAA,kBAAkB,CAACK,IAAnB,CAAwBF,QAAxB;AACH;;AAAA;AACF,KAJD;AAKA,UAAMG,KAAK,GAAGN,kBAAkB,CAACO,GAAnB,CAAwBC,CAAD,IAAO;AAC1C,0BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,qBAAKA,CAAC,CAACC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oBAAKD,CAAC,CAACE;AAAP;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,iCAAI;AAAQ,YAAA,OAAO,EAAGC,CAAD,IAAOZ,WAAW,CAACY,CAAD,EAAIH,CAAJ,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA,SAASA,CAAC,CAACI,EAAX;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KATa,CAAd;AAUA,wBAAO,QAAC,iBAAD;AAAmB,MAAA,KAAK,EAAEN;AAA1B;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAjBD,MAiBO;AACL;AACA,WAAO,IAAP;AACD;AACF;KAzBuBT,mB","sourcesContent":["import React from \"react\";\nimport RenderMedActivity from \"./RenderMedActivity\";\n\nexport default function PrepMeditationTable({ activityHash, askToDelete }) {\n\n  const meditationSessions = [];\n\n  if (activityHash.length) {\n    activityHash.forEach((activity) => {\n      if (activity.name === \"meditation\") {\n          meditationSessions.push(activity)\n      };\n    });\n    const table = meditationSessions.map((a) => {\n      return (\n        <tr key={a.id}>\n          <td></td>\n          <td>{a.minutes} minutes</td>\n          <td>{a.notes}</td>\n          <td><button onClick={(e) => askToDelete(e, a)}>Delete activity</button></td>\n        </tr>\n      );\n    });\n    return <RenderMedActivity table={table} />\n  } else {\n    //   console.log('activity hash is empty')\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}