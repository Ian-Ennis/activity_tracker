{"ast":null,"code":"var _jsxFileName = \"/Users/Ian/Development/code/mod4/activity_tracker/client/src/components/ActivityForms.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport { Chart as ChartJS } from \"chart.js/auto\";\nimport { Chart } from \"react-chartjs-2\";\nimport { Bar } from \"react-chartjs-2\";\nimport MeditationTable from \"./Tables/MeditationTable\";\nimport YogaTable from \"./Tables/YogaTable\";\nimport CardioTable from \"./Tables/CardioTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst backend_API = `http://localhost:3000/activities`;\n\nfunction ActivityForms({\n  header\n}) {\n  _s();\n\n  const [activityHash, setActivityHash] = useState([]);\n  const [activity, setActivity] = useState(\"\");\n  const [selected, setSelected] = useState(false);\n  const activityOptions = [{\n    value: \"meditation\",\n    label: \"üßò Meditation\"\n  }, {\n    value: \"yoga\",\n    label: \"ü§∏‚Äç‚ôÇÔ∏è Yoga\"\n  }, {\n    value: \"cardio\",\n    label: \"üèÉüèΩ Cardio\"\n  }];\n  const meditationLabels = [];\n  const yogaLabels = [];\n  const cardioLabels = [];\n  const meditationSessions = [];\n  const yogaSessions = [];\n  const cardioSessions = [];\n\n  if (activityHash.length) {\n    for (let i = 0; i < activityHash.length; i++) {\n      if (activityHash[i].name === \"meditation\") {\n        meditationLabels.push(activityHash[i].id);\n        meditationSessions.push(activityHash[i].minutes);\n      } else if (activityHash[i].name === \"yoga\") {\n        yogaLabels.push(activityHash[i].id);\n        yogaSessions.push(activityHash[i].minutes);\n      } else if (activityHash[i].name === \"cardio\") {\n        cardioLabels.push(activityHash[i].id);\n        cardioSessions.push(activityHash[i]);\n      }\n    }\n  }\n\n  function handleMeditationSubmit(e) {\n    e.preventDefault();\n    const name = activity;\n    const minutes = e.target.minutes.value;\n    const notes = e.target.notes.value;\n    fetch(`${backend_API}`, {\n      method: \"POST\",\n      headers: {\n        Accepts: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      },\n      body: JSON.stringify({\n        name,\n        minutes,\n        notes\n      })\n    }).then(() => {\n      fetch(`${backend_API}`, {\n        method: \"GET\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n        }\n      }).then(res => res.json()).then(data => {\n        setActivityHash(data);\n      });\n    });\n  }\n\n  function handleYogaSubmit(e) {\n    e.preventDefault();\n    setActivityHash([]);\n    const name = activity;\n    const yoga_type = e.target.yoga_type.value;\n    const minutes = e.target.minutes.value;\n    const notes = e.target.notes.value;\n    fetch(`${backend_API}`, {\n      method: \"POST\",\n      headers: {\n        Accepts: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      },\n      body: JSON.stringify({\n        name,\n        yoga_type,\n        minutes,\n        notes\n      })\n    }).then(() => {\n      fetch(`${backend_API}`, {\n        method: \"GET\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n        }\n      }).then(res => res.json()).then(data => {\n        setActivityHash(data);\n      });\n    });\n  }\n\n  function handleCardioSubmit(e) {\n    e.preventDefault();\n    setActivityHash([]);\n    const name = activity;\n    const workout = e.target.workout.value;\n    const distance = e.target.distance.value;\n    const minutes = e.target.minutes.value;\n    const notes = e.target.notes.value;\n    fetch(`${backend_API}`, {\n      method: \"POST\",\n      headers: {\n        Accepts: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      },\n      body: JSON.stringify({\n        name,\n        workout,\n        distance,\n        minutes,\n        notes\n      })\n    }).then(() => {\n      fetch(`${backend_API}`, {\n        method: \"GET\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n        }\n      }).then(res => res.json()).then(data => {\n        setActivityHash(data);\n      });\n    });\n  }\n\n  function askToDelete(e, a) {\n    e.preventDefault();\n    window.confirm(`Delete ${activity} from database?`);\n\n    if (window.confirm) {\n      fetch(`${backend_API}/${a.id}`, {\n        method: \"DELETE\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n        }\n      }).then(() => {\n        fetch(`${backend_API}`, {\n          method: \"GET\",\n          headers: {\n            Accepts: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n          }\n        }).then(res => res.json()).then(data => {\n          setActivityHash(data);\n        });\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"site_info\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Down to meditate? Into yoga? Always on the move? Get a Leg-Up on life by logging your self-care sessions using the menu below, so you can keep track of your kick-ass routines as you do them.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"activity_div\",\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        className: \"activity_dropdown\",\n        autofocus: true,\n        isSearchable: true,\n        placeholder: \"Select activity\",\n        options: activityOptions,\n        onChange: e => {\n          fetch(`${backend_API}`, {\n            method: \"GET\",\n            headers: {\n              Accepts: \"application/json\",\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n            }\n          }).then(res => res.json()).then(data => {\n            setActivityHash(data);\n            setSelected(true);\n            setActivity(e.value);\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), selected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forms\",\n        children: [activity === \"meditation\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            onSubmit: handleMeditationSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"name\",\n              children: \"Meditation Session:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputs\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"minutes\",\n                placeholder: \"Time (minutes)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"notes\",\n                placeholder: \"Notes?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(MeditationTable, {\n            activity: activity,\n            activityHash: activityHash,\n            askToDelete: askToDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bar_chart\",\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              data: {\n                labels: meditationLabels,\n                datasets: [{\n                  label: \"Time dedicated\",\n                  backgroundColor: \"rgba(75,192,192,1)\",\n                  borderColor: \"rgba(0,0,0,1)\",\n                  borderWidth: 2,\n                  data: [meditationSessions[0].minutes, meditationSessions[1].minutes, meditationSessions[2].minutes]\n                }]\n              },\n              options: {\n                title: {\n                  display: true,\n                  text: \"Average Rainfall per month\",\n                  fontSize: 20\n                },\n                legend: {\n                  display: true,\n                  position: \"right\"\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : null, activity === \"yoga\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            onSubmit: handleYogaSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"name\",\n              children: \"Yoga Session:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputs\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"yoga_type\",\n                placeholder: \"Type (Hatha, etc)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"minutes\",\n                placeholder: \"Time (minutes)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"notes\",\n                placeholder: \"Notes?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(YogaTable, {\n            activity: activity,\n            activityHash: activityHash,\n            askToDelete: askToDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bar_chart\",\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              data: {\n                labels: yogaLabels,\n                datasets: [{\n                  label: \"Time dedicated\",\n                  backgroundColor: \"rgba(75,192,192,1)\",\n                  borderColor: \"rgba(0,0,0,1)\",\n                  borderWidth: 2,\n                  data: [yogaSessions[0].minutes, yogaSessions[1].minutes, yogaSessions[2].minutes]\n                }]\n              },\n              options: {\n                title: {\n                  display: true,\n                  text: \"Average Rainfall per month\",\n                  fontSize: 20\n                },\n                legend: {\n                  display: true,\n                  position: \"right\"\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : null, activity === \"cardio\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            onSubmit: handleCardioSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"name\",\n              children: \"Cardio workout:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputs\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"workout\",\n                placeholder: \"Type (walk/run/hike)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"distance\",\n                placeholder: \"Distance (miles)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"minutes\",\n                placeholder: \"Time (minutes)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"notes\",\n                placeholder: \"Notes?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CardioTable, {\n            activity: activity,\n            activityHash: activityHash,\n            askToDelete: askToDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bar_chart\",\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              data: {\n                labels: cardioLabels,\n                datasets: [{\n                  label: \"Time dedicated\",\n                  backgroundColor: \"rgba(75,192,192,1)\",\n                  borderColor: \"rgba(0,0,0,1)\",\n                  borderWidth: 2,\n                  data: [cardioSessions[0].minutes, cardioSessions[1].minutes, cardioSessions[2].minutes]\n                }]\n              },\n              options: {\n                title: {\n                  display: true,\n                  text: \"Average Rainfall per month\",\n                  fontSize: 20\n                },\n                legend: {\n                  display: true,\n                  position: \"right\"\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ActivityForms, \"X4a4ja2xY/irhkiiIjnPDClsEXU=\");\n\n_c = ActivityForms;\nexport default ActivityForms;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActivityForms\");","map":{"version":3,"sources":["/Users/Ian/Development/code/mod4/activity_tracker/client/src/components/ActivityForms.js"],"names":["React","useState","Select","Chart","ChartJS","Bar","MeditationTable","YogaTable","CardioTable","backend_API","ActivityForms","header","activityHash","setActivityHash","activity","setActivity","selected","setSelected","activityOptions","value","label","meditationLabels","yogaLabels","cardioLabels","meditationSessions","yogaSessions","cardioSessions","length","i","name","push","id","minutes","handleMeditationSubmit","e","preventDefault","target","notes","fetch","method","headers","Accepts","Authorization","localStorage","getItem","body","JSON","stringify","then","res","json","data","handleYogaSubmit","yoga_type","handleCardioSubmit","workout","distance","askToDelete","a","window","confirm","labels","datasets","backgroundColor","borderColor","borderWidth","title","display","text","fontSize","legend","position"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport { Chart as ChartJS } from \"chart.js/auto\";\nimport { Chart } from \"react-chartjs-2\";\nimport { Bar } from \"react-chartjs-2\";\nimport MeditationTable from \"./Tables/MeditationTable\";\nimport YogaTable from \"./Tables/YogaTable\";\nimport CardioTable from \"./Tables/CardioTable\";\nconst backend_API = `http://localhost:3000/activities`;\n\nfunction ActivityForms({ header }) {\n  const [activityHash, setActivityHash] = useState([]);\n  const [activity, setActivity] = useState(\"\");\n  const [selected, setSelected] = useState(false);\n\n  const activityOptions = [\n    { value: \"meditation\", label: \"üßò Meditation\" },\n    { value: \"yoga\", label: \"ü§∏‚Äç‚ôÇÔ∏è Yoga\" },\n    { value: \"cardio\", label: \"üèÉüèΩ Cardio\" },\n  ];\n\n  const meditationLabels = [];\n  const yogaLabels = [];\n  const cardioLabels = [];\n\n  const meditationSessions = [];\n  const yogaSessions = [];\n  const cardioSessions = [];\n\n  if (activityHash.length) {\n    for (let i = 0; i < activityHash.length; i++) {\n      if (activityHash[i].name === \"meditation\") {\n        meditationLabels.push(activityHash[i].id)\n        meditationSessions.push(activityHash[i].minutes)\n      } else if (activityHash[i].name === \"yoga\") {\n        yogaLabels.push(activityHash[i].id)\n        yogaSessions.push(activityHash[i].minutes)\n      } else if (activityHash[i].name === \"cardio\") {\n        cardioLabels.push(activityHash[i].id)\n        cardioSessions.push(activityHash[i])\n      }\n  }\n}\n\n  function handleMeditationSubmit(e) {\n    e.preventDefault();\n\n    const name = activity;\n    const minutes = e.target.minutes.value;\n    const notes = e.target.notes.value;\n\n    fetch(`${backend_API}`, {\n      method: \"POST\",\n      headers: {\n        Accepts: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n      },\n      body: JSON.stringify({\n        name,\n        minutes,\n        notes,\n      }),\n    }).then(() => {\n      fetch(`${backend_API}`, {\n        method: \"GET\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n        },\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setActivityHash(data);\n\n        });\n    });\n  }\n\n  function handleYogaSubmit(e) {\n    e.preventDefault();\n    setActivityHash([]);\n\n    const name = activity;\n    const yoga_type = e.target.yoga_type.value;\n    const minutes = e.target.minutes.value;\n    const notes = e.target.notes.value;\n\n    fetch(`${backend_API}`, {\n      method: \"POST\",\n      headers: {\n        Accepts: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n      },\n      body: JSON.stringify({\n        name,\n        yoga_type,\n        minutes,\n        notes,\n      }),\n    }).then(() => {\n      fetch(`${backend_API}`, {\n        method: \"GET\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n        },\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setActivityHash(data);\n        });\n    });\n  }\n\n  function handleCardioSubmit(e) {\n    e.preventDefault();\n    setActivityHash([]);\n\n    const name = activity;\n    const workout = e.target.workout.value;\n    const distance = e.target.distance.value;\n    const minutes = e.target.minutes.value;\n    const notes = e.target.notes.value;\n\n    fetch(`${backend_API}`, {\n      method: \"POST\",\n      headers: {\n        Accepts: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n      },\n      body: JSON.stringify({\n        name,\n        workout,\n        distance,\n        minutes,\n        notes,\n      }),\n    }).then(() => {\n      fetch(`${backend_API}`, {\n        method: \"GET\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n        },\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setActivityHash(data);\n        });\n    });\n  }\n\n  function askToDelete(e, a) {\n    e.preventDefault();\n    window.confirm(`Delete ${activity} from database?`);\n    if (window.confirm) {\n      fetch(`${backend_API}/${a.id}`, {\n        method: \"DELETE\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n        },\n      }).then(() => {\n        fetch(`${backend_API}`, {\n          method: \"GET\",\n          headers: {\n            Accepts: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n          },\n        })\n          .then((res) => res.json())\n          .then((data) => {\n            setActivityHash(data);\n          });\n      });\n    }\n  }\n\n  return (\n    <>\n      <div className=\"header\">{header}</div>\n      <div className=\"site_info\">\n        <h5>\n          Down to meditate? Into yoga? Always on the move? Get a Leg-Up on life\n          by logging your self-care sessions using the menu below, so you can\n          keep track of your kick-ass routines as you do them.\n        </h5>\n      </div>\n      <div className=\"activity_div\">\n        <Select\n          className=\"activity_dropdown\"\n          autofocus\n          isSearchable\n          placeholder=\"Select activity\"\n          options={activityOptions}\n          onChange={(e) => {\n            fetch(`${backend_API}`, {\n              method: \"GET\",\n              headers: {\n                Accepts: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n              },\n            })\n              .then((res) => res.json())\n              .then((data) => {\n                setActivityHash(data);\n                setSelected(true);\n                setActivity(e.value);\n              });\n          }}\n        />\n        {selected ? (\n          <div className=\"forms\">\n            {activity === \"meditation\" ? (\n              <>\n                <form className=\"form\" onSubmit={handleMeditationSubmit}>\n                  <label for=\"name\">Meditation Session:</label>\n                  <div className=\"inputs\">\n                    <input\n                      type=\"number\"\n                      name=\"minutes\"\n                      placeholder=\"Time (minutes)\"\n                    />\n                    <input type=\"text\" name=\"notes\" placeholder=\"Notes?\" />\n                    <button type=\"submit\">Submit</button>\n                  </div>\n                </form>\n                <MeditationTable\n                  activity={activity}\n                  activityHash={activityHash}\n                  askToDelete={askToDelete}\n                />\n                <div className=\"bar_chart\">\n                  <Bar\n                    data={{\n                      labels: meditationLabels,\n                      datasets: [\n                        {\n                          label: \"Time dedicated\",\n                          backgroundColor: \"rgba(75,192,192,1)\",\n                          borderColor: \"rgba(0,0,0,1)\",\n                          borderWidth: 2,\n                          data: [meditationSessions[0].minutes, meditationSessions[1].minutes, meditationSessions[2].minutes],\n                        },\n                      ],\n                    }}\n                    options={{\n                      title: {\n                        display: true,\n                        text: \"Average Rainfall per month\",\n                        fontSize: 20,\n                      },\n                      legend: {\n                        display: true,\n                        position: \"right\",\n                      },\n                    }}\n                  />\n                </div>\n              </>\n            ) : null}\n            {activity === \"yoga\" ? (\n              <>\n                <form className=\"form\" onSubmit={handleYogaSubmit}>\n                  <label for=\"name\">Yoga Session:</label>\n                  <div className=\"inputs\">\n                    <input\n                      type=\"text\"\n                      name=\"yoga_type\"\n                      placeholder=\"Type (Hatha, etc)\"\n                    />\n                    <input\n                      type=\"number\"\n                      name=\"minutes\"\n                      placeholder=\"Time (minutes)\"\n                    />\n                    <input type=\"text\" name=\"notes\" placeholder=\"Notes?\" />\n                    <button type=\"submit\">Submit</button>\n                  </div>\n                </form>\n                <YogaTable\n                  activity={activity}\n                  activityHash={activityHash}\n                  askToDelete={askToDelete}\n                />\n                <div className=\"bar_chart\">\n                  <Bar\n                    data={{\n                      labels: yogaLabels,\n                      datasets: [\n                        {\n                          label: \"Time dedicated\",\n                          backgroundColor: \"rgba(75,192,192,1)\",\n                          borderColor: \"rgba(0,0,0,1)\",\n                          borderWidth: 2,\n                          data: [yogaSessions[0].minutes, yogaSessions[1].minutes, yogaSessions[2].minutes],\n                        },\n                      ],\n                    }}\n                    options={{\n                      title: {\n                        display: true,\n                        text: \"Average Rainfall per month\",\n                        fontSize: 20,\n                      },\n                      legend: {\n                        display: true,\n                        position: \"right\",\n                      },\n                    }}\n                  />\n                </div>\n              </>\n            ) : null}\n            {activity === \"cardio\" ? (\n              <>\n                <form className=\"form\" onSubmit={handleCardioSubmit}>\n                  <label for=\"name\">Cardio workout:</label>\n                  <div className=\"inputs\">\n                    <input\n                      type=\"text\"\n                      name=\"workout\"\n                      placeholder=\"Type (walk/run/hike)\"\n                    />\n                    <input\n                      type=\"number\"\n                      name=\"distance\"\n                      placeholder=\"Distance (miles)\"\n                    />\n                    <input\n                      type=\"number\"\n                      name=\"minutes\"\n                      placeholder=\"Time (minutes)\"\n                    />\n                    <input type=\"text\" name=\"notes\" placeholder=\"Notes?\" />\n                    <button type=\"submit\">Submit</button>\n                  </div>\n                </form>\n                <CardioTable\n                  activity={activity}\n                  activityHash={activityHash}\n                  askToDelete={askToDelete}\n                />\n                <div className=\"bar_chart\">\n                  <Bar\n                    data={{\n                      labels: cardioLabels,\n                      datasets: [\n                        {\n                          label: \"Time dedicated\",\n                          backgroundColor: \"rgba(75,192,192,1)\",\n                          borderColor: \"rgba(0,0,0,1)\",\n                          borderWidth: 2,\n                          data: [cardioSessions[0].minutes, cardioSessions[1].minutes, cardioSessions[2].minutes],\n                        },\n                      ],\n                    }}\n                    options={{\n                      title: {\n                        display: true,\n                        text: \"Average Rainfall per month\",\n                        fontSize: 20,\n                      },\n                      legend: {\n                        display: true,\n                        position: \"right\",\n                      },\n                    }}\n                  />\n                </div>\n              </>\n            ) : null}\n          </div>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default ActivityForms\n"]},"metadata":{},"sourceType":"module"}