{"ast":null,"code":"var _jsxFileName = \"/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/components/PrepTable.js\";\nimport React from \"react\";\nimport RenderActivities from \"./RenderActivities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PrepTable({\n  activity,\n  activityHash\n}) {\n  console.log(\"inside PrepTable\");\n\n  if (activityHash != []) {\n    const table = activityHash.map(a => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: a.minutes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: a.notes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)]\n      }, a.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this);\n    });\n  } else {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(RenderActivities, {\n      activity: activity,\n      table: table\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = PrepTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrepTable\");","map":{"version":3,"sources":["/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/components/PrepTable.js"],"names":["React","RenderActivities","PrepTable","activity","activityHash","console","log","table","map","a","minutes","notes","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAEA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAnB,EAA+C;AAC5DC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AAEA,MAAIF,YAAY,IAAI,EAApB,EAAwB;AACtB,UAAMG,KAAK,GAAGH,YAAY,CAACI,GAAb,CAAkBC,CAAD,IAAO;AACpC,0BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAKA,CAAC,CAACC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oBAAKD,CAAC,CAACE;AAAP;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,SAASF,CAAC,CAACG,EAAX;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARa,CAAd;AASD,GAVD,MAUO;AACL,WAAO,IAAP;AACD;;AAED,sBACE;AAAA,2BACE,QAAC,gBAAD;AAAkB,MAAA,QAAQ,EAAET,QAA5B;AAAsC,MAAA,KAAK,EAAEI;AAA7C;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD;KAtBuBL,S","sourcesContent":["import React from \"react\";\nimport RenderActivities from \"./RenderActivities\";\n\nexport default function PrepTable({ activity, activityHash }) {\n  console.log(\"inside PrepTable\");\n\n  if (activityHash != []) {\n    const table = activityHash.map((a) => {\n      return (\n        <tr key={a.id}>\n          <td></td>\n          <td>{a.minutes}</td>\n          <td>{a.notes}</td>\n        </tr>\n      );\n    });\n  } else {\n    return null;\n  }\n\n  return (\n    <>\n      <RenderActivities activity={activity} table={table} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}