{"version":3,"file":"react-router.js","sources":["../../packages/react-router/index.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createMemoryHistory, parsePath } from 'history';\n\nconst readOnly = __DEV__ ? obj => Object.freeze(obj) : obj => obj;\n\nfunction invariant(cond, message) {\n  if (!cond) throw new Error(message);\n}\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== 'undefined') console.warn(message);\n\n    try {\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// CONTEXT\n///////////////////////////////////////////////////////////////////////////////\n\nconst LocationContext = React.createContext();\n\nif (__DEV__) {\n  LocationContext.Consumer.displayName = 'Location.Consumer';\n  LocationContext.Provider.displayName = 'Location.Provider';\n}\n\nconst RouteContext = React.createContext({\n  outlet: null,\n  params: readOnly({}),\n  pathname: '',\n  route: null\n});\n\nif (__DEV__) {\n  RouteContext.Consumer.displayName = 'Route.Consumer';\n  RouteContext.Provider.displayName = 'Route.Provider';\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * A <Router> that stores all entries in memory.\n */\nexport function MemoryRouter({\n  children,\n  initialEntries,\n  initialIndex,\n  timeout\n}) {\n  let historyRef = React.useRef(null);\n\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({ initialEntries, initialIndex });\n  }\n\n  return (\n    <Router\n      children={children}\n      history={historyRef.current}\n      timeout={timeout}\n    />\n  );\n}\n\nif (__DEV__) {\n  MemoryRouter.displayName = 'MemoryRouter';\n  MemoryRouter.propTypes = {\n    children: PropTypes.node,\n    timeout: PropTypes.number,\n    initialEntries: PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.shape({\n          pathname: PropTypes.string,\n          search: PropTypes.string,\n          hash: PropTypes.string,\n          state: PropTypes.object,\n          key: PropTypes.string\n        })\n      ])\n    ),\n    initialIndex: PropTypes.number\n  };\n}\n\n/**\n * Navigate programmatically using a component.\n */\nexport function Navigate({ to, replace = false, state }) {\n  let navigate = useNavigate();\n  navigate(to, { replace, state });\n  return null;\n}\n\nif (__DEV__) {\n  Navigate.displayName = 'Navigate';\n  Navigate.propTypes = {\n    to: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.shape({\n        pathname: PropTypes.string,\n        search: PropTypes.string,\n        hash: PropTypes.string\n      })\n    ]).isRequired,\n    replace: PropTypes.bool,\n    state: PropTypes.object\n  };\n}\n\n/**\n * Renders the child route's element, if there is one.\n */\nexport function Outlet() {\n  return useOutlet();\n}\n\nif (__DEV__) {\n  Outlet.displayName = 'Outlet';\n  Outlet.propTypes = {};\n}\n\n/**\n * Used in a route config to redirect from one location to another.\n */\nexport function Redirect() {\n  return null;\n}\n\nif (__DEV__) {\n  Redirect.displayName = 'Redirect';\n\n  function redirectChildrenType(props, propName, componentName) {\n    if (props[propName] != null) {\n      return new Error(\n        'A <Redirect> should not have child routes; they will never be rendered.'\n      );\n    }\n  }\n\n  Redirect.propTypes = {\n    children: redirectChildrenType,\n    from: PropTypes.string,\n    to: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.shape({\n        pathname: PropTypes.string,\n        search: PropTypes.string,\n        hash: PropTypes.string\n      })\n    ])\n  };\n}\n\n/**\n * Used in a route config to render an element.\n */\nexport function Route({ element }) {\n  return element;\n}\n\nif (__DEV__) {\n  Route.displayName = 'Route';\n  Route.propTypes = {\n    children: PropTypes.node,\n    element: PropTypes.element,\n    path: PropTypes.string\n  };\n}\n\n// TODO: Remove once React.useTransition is stable.\nconst startTransition = tx => tx();\nconst useTransition = React.useTransition || (() => [startTransition, false]);\n\n/**\n * The root context provider. There should be only one of these in a given app.\n */\nexport function Router({ children = null, history, timeout = 2000 }) {\n  let [location, setLocation] = React.useState(history.location);\n  let [startTransition, pending] = useTransition({ timeoutMs: timeout });\n  let listeningRef = React.useRef(false);\n\n  invariant(\n    !React.useContext(LocationContext),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You never need more than one.`\n  );\n\n  if (!listeningRef.current) {\n    listeningRef.current = true;\n    history.listen(({ location }) => {\n      startTransition(() => {\n        setLocation(location);\n      });\n    });\n  }\n\n  return (\n    <LocationContext.Provider\n      children={children}\n      value={{ history, location, pending }}\n    />\n  );\n}\n\nif (__DEV__) {\n  Router.displayName = 'Router';\n  Router.propTypes = {\n    children: PropTypes.node,\n    history: PropTypes.shape({\n      action: PropTypes.string,\n      location: PropTypes.object,\n      push: PropTypes.func,\n      replace: PropTypes.func,\n      go: PropTypes.func,\n      listen: PropTypes.func,\n      block: PropTypes.func\n    }),\n    timeout: PropTypes.number\n  };\n}\n\n/**\n * A wrapper for useRoutes that treats its children as route and/or redirect\n * objects.\n */\nexport function Routes({ basename = '', caseSensitive = false, children }) {\n  let routes = createRoutesFromChildren(children);\n  return useRoutes(routes, basename, caseSensitive);\n}\n\nif (__DEV__) {\n  Routes.displayName = 'Routes';\n  Routes.propTypes = {\n    basename: PropTypes.string,\n    caseSensitive: PropTypes.bool,\n    children: PropTypes.node\n  };\n}\n\n/**\n * Utility function that creates a routes config object from a React\n * \"children\" object, which is usually either a React element or an\n * array of elements.\n */\nexport function createRoutesFromChildren(children) {\n  let routes = [];\n\n  React.Children.forEach(children, element => {\n    // Ignore non-elements. This allows people to more\n    // easily inline conditionals in their route config.\n    if (!React.isValidElement(element)) return;\n\n    let { children, from, path, to } = element.props;\n\n    // Transparently support React.Fragment and its children.\n    if (element.type === React.Fragment) {\n      routes.push.apply(routes, createRoutesFromChildren(children));\n      return;\n    }\n\n    path = path || from || '/';\n\n    // Components that have a to prop are redirects.\n    // All others should use path + element (and maybe children) props.\n    let route;\n    if (to) {\n      route = { path, redirectTo: to };\n    } else {\n      route = { path, element };\n\n      let childRoutes = createRoutesFromChildren(children);\n      if (childRoutes.length) {\n        route.children = childRoutes;\n      }\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// HOOKS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Blocks all navigation attempts. This is useful for preventing the page from\n * changing until some condition is met, like saving form data.\n */\nexport function useBlocker(blocker, when = true) {\n  let { history } = React.useContext(LocationContext);\n\n  // TODO: This error is probably because they somehow have\n  // 2 versions of the router loaded. We can help them understand\n  // how to avoid that.\n  invariant(\n    history != null,\n    'navigation blocking may be used only in the context of a <Router> component'\n  );\n\n  React.useEffect(() => {\n    if (when) {\n      let unblock = history.block(tx => {\n        let autoUnblockingTx = {\n          ...tx,\n          retry() {\n            // Automatically unblock the transition so it can\n            // play all the way through before retrying it.\n            // TODO: Figure out how to re-enable this block if the\n            // transition is cancelled for some reason.\n            unblock();\n            tx.retry();\n          }\n        };\n\n        blocker(autoUnblockingTx);\n      });\n\n      return unblock;\n    }\n  }, [history, when, blocker]);\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n */\nexport function useHref(to) {\n  let resolvedLocation = useResolvedLocation(to);\n  let { history } = React.useContext(LocationContext);\n\n  // TODO: This error is probably because they somehow have\n  // 2 versions of the router loaded. We can help them understand\n  // how to avoid that.\n  invariant(\n    history != null,\n    'href resolution may be used only in the context of a <Router> component'\n  );\n\n  return history.createHref(resolvedLocation);\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * NOTE: If you're using this it may mean you're doing some of your own \"routing\"\n * in your app, and we'd like to know what your use case is. We may be able to\n * provide something higher-level to better suit your needs.\n */\nexport function useLocation() {\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n */\nexport function useMatch(to) {\n  let location = useLocation();\n  let resolvedLocation = useResolvedLocation(to);\n  // TODO: Try to match search + hash as well\n  return location.pathname === resolvedLocation.pathname;\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n */\nexport function useNavigate() {\n  let { history, pending } = React.useContext(LocationContext);\n  let { pathname } = React.useContext(RouteContext);\n\n  // TODO: This error is probably because they somehow have\n  // 2 versions of the router loaded. We can help them understand\n  // how to avoid that.\n  invariant(\n    history != null,\n    'navigation may be used only in the context of a <Router> component'\n  );\n\n  let navigate = React.useCallback(\n    (to, { replace, state } = {}) => {\n      if (typeof to === 'number') {\n        history.go(to);\n      } else {\n        let relativeTo = resolveLocation(to, pathname);\n\n        // If we are pending transition, use REPLACE instead of PUSH.\n        // This will prevent URLs that we started navigating to but\n        // never fully loaded from appearing in the history stack.\n        let method = !!replace || pending ? 'replace' : 'push';\n        history[method](relativeTo, state);\n      }\n    },\n    [history, pending, pathname]\n  );\n\n  return navigate;\n}\n\n/**\n * Returns the outlet element at this level of the route hierarchy. Used to\n * render child routes.\n */\nexport function useOutlet() {\n  return React.useContext(RouteContext).outlet;\n}\n\n/**\n * Returns a hash of the dynamic params that were matched in the route path.\n * This is useful for using ids embedded in the URL to fetch data, but we\n * eventually want to provide something at a higher level for this.\n */\nexport function useParams() {\n  return React.useContext(RouteContext).params;\n}\n\n/**\n * Returns a fully-resolved location object relative to the current location.\n */\nexport function useResolvedLocation(to) {\n  let { pathname } = React.useContext(RouteContext);\n  return React.useMemo(() => resolveLocation(to, pathname), [to, pathname]);\n}\n\nlet missingTrailingSplatWarnings, warnAboutMissingTrailingSplatAt;\nif (__DEV__) {\n  missingTrailingSplatWarnings = {};\n  warnAboutMissingTrailingSplatAt = (pathname, cond, message) => {\n    if (!cond && !missingTrailingSplatWarnings[pathname]) {\n      missingTrailingSplatWarnings[pathname] = true;\n      warning(false, message);\n    }\n  };\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * Route objects may take one of 2 forms:\n *\n * - { path, element, children }\n * - { path, redirectTo }\n *\n * We should probably write this up in TypeScript instead of in a comment. In\n * fact, what am I even doing here. Nobody is ever going to read this.\n */\nexport function useRoutes(routes, basename = '', caseSensitive = false) {\n  let {\n    params: parentParams,\n    pathname: parentPathname,\n    route: parentRoute\n  } = React.useContext(RouteContext);\n\n  if (warnAboutMissingTrailingSplatAt) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since\n    // we cannot even give the warning unless they land at the parent route.\n    let parentPath = parentRoute && parentRoute.path;\n    warnAboutMissingTrailingSplatAt(\n      parentPathname,\n      !parentRoute || parentRoute.path.endsWith('*'),\n      `You rendered descendant <Routes> (or called \\`useRoutes\\`) at \"${parentPathname}\"` +\n        ` (under <Route path=\"${parentPath}\">) but the parent route path has no trailing \"*\".` +\n        ` This means if you navigate deeper, the parent won't match anymore and therefore` +\n        ` the child routes will never render.` +\n        `\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route path=\"${parentPath}/*\">.`\n    );\n  }\n\n  basename = basename ? joinPaths([parentPathname, basename]) : parentPathname;\n\n  let navigate = useNavigate();\n  let location = useLocation();\n  let matches = React.useMemo(\n    () => matchRoutes(routes, location, basename, caseSensitive),\n    [routes, location, basename, caseSensitive]\n  );\n\n  if (!matches) {\n    // TODO: Warn about nothing matching, suggest using a catch-all route.\n    return null;\n  }\n\n  // If we matched a redirect, navigate and return null.\n  let redirectMatch = matches.find(match => isRedirectRoute(match.route));\n  if (redirectMatch) {\n    let { params, route } = redirectMatch;\n    let relativeTo = resolveLocation(route.redirectTo, parentPathname);\n\n    let { pathname } = relativeTo;\n    if (/:\\w+/.test(pathname)) {\n      // Allow param interpolation into <Redirect to>, e.g.\n      // <Redirect from=\"users/:id\" to=\"profile/:id\">\n      relativeTo = { ...relativeTo, pathname: generatePath(pathname, params) };\n    }\n\n    navigate(relativeTo, { replace: true });\n\n    return null;\n  }\n\n  // TODO: Initiate preload sequence here.\n\n  // Otherwise render an element.\n  let element = matches.reduceRight((outlet, { params, pathname, route }) => {\n    return (\n      <RouteContext.Provider\n        children={route.element}\n        value={{\n          outlet,\n          params: readOnly({ ...parentParams, ...params }),\n          pathname: joinPaths([basename, pathname]),\n          route\n        }}\n      />\n    );\n  }, null);\n\n  return element;\n}\n\nfunction isRedirectRoute(route) {\n  return route.redirectTo != null;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Matches the given routes to a location and returns the match data.\n */\nexport function matchRoutes(\n  routes,\n  location,\n  basename = '',\n  caseSensitive = false\n) {\n  if (typeof location === 'string') {\n    location = parsePath(location);\n  }\n\n  // TODO: Validate location\n  // - it should have a pathname\n  let base = basename.replace(/^\\/+|\\/+$/g, '');\n  let target = location.pathname.slice(1);\n\n  if (base) {\n    if (base === target) {\n      target = '';\n    } else if (target.startsWith(base)) {\n      target = target.slice(base.length).replace(/^\\/+/, '');\n    } else {\n      return null;\n    }\n  }\n\n  let flattenedRoutes = flattenRoutes(routes);\n\n  // TODO: Validate the routes config\n  // - routes should all have paths and elements\n  // - redirects should have a redirectTo\n  // - redirects should not have children\n  // - warn about unreachable routes\n\n  rankFlattenedRoutes(flattenedRoutes);\n\n  for (let i = 0; i < flattenedRoutes.length; ++i) {\n    let [path, flatRoutes] = flattenedRoutes[i];\n\n    // TODO: Match on search, state too\n    let [matcher] = compilePath(path, /* end */ true, caseSensitive);\n\n    if (matcher.test(target)) {\n      return flatRoutes.map((route, index) => {\n        let routes = flatRoutes.slice(0, index + 1);\n        let path = joinPaths(routes.map(r => r.path));\n        let [matcher, keys] = compilePath(path, /* end */ false, caseSensitive);\n        let match = target.match(matcher);\n\n        return {\n          params: createParams(keys, match.slice(2)),\n          pathname: '/' + match[1],\n          route\n        };\n      });\n    }\n  }\n\n  return null;\n}\n\nfunction flattenRoutes(\n  routes,\n  flattenedRoutes = [],\n  parentPath = '',\n  parentRoutes = [],\n  parentIndexes = []\n) {\n  routes.forEach((route, index) => {\n    let path = joinPaths([parentPath, route.path]);\n    let routes = parentRoutes.concat(route);\n    let indexes = parentIndexes.concat(index);\n\n    flattenedRoutes.push([path, routes, indexes]);\n\n    if (route.children) {\n      flattenRoutes(route.children, flattenedRoutes, path, routes, indexes);\n    }\n  });\n\n  return flattenedRoutes;\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === '*';\n\nfunction computeScore(path) {\n  let segments = path.split('/');\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  return segments\n    .filter(s => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === ''\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction rankFlattenedRoutes(flattenedRoutes) {\n  let pathScores = flattenedRoutes.reduce((memo, [path]) => {\n    memo[path] = computeScore(path);\n    return memo;\n  }, {});\n\n  flattenedRoutes.sort((a, b) => {\n    let [aPath, , aIndexes] = a;\n    let aScore = pathScores[aPath];\n\n    let [bPath, , bIndexes] = b;\n    let bScore = pathScores[bPath];\n\n    return aScore !== bScore\n      ? bScore - aScore // Higher score first\n      : compareIndexes(aIndexes, bIndexes);\n  });\n}\n\nfunction compareIndexes(a, b) {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? a[a.length - 1] - b[b.length - 1] // Earlier siblings come first\n    : 0; // It doesn't make sense to rank non-siblings by index, so they sort equal\n}\n\nfunction compilePath(path, end, caseSensitive) {\n  let keys = [];\n  let pattern =\n    '^(' +\n    path\n      .replace(/^\\/+/, '') // Ignore leading /\n      .replace(/\\*\\//g, '') // Ignore */ (from paths nested under a *)\n      .replace(/\\/?\\*?$/, '') // Ignore trailing /*, we'll handle it below\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, '\\\\$&') // Escape special regex chars\n      .replace(/:(\\w+)/g, (_, key) => {\n        keys.push(key);\n        return '([^\\\\/]+)';\n      }) +\n    ')';\n\n  if (path.endsWith('*')) {\n    if (path.endsWith('/*')) {\n      pattern += '\\\\/?'; // Don't include the / in params['*']\n    }\n    keys.push('*');\n    pattern += '(.*)';\n  } else if (end) {\n    pattern += '\\\\/?';\n  }\n\n  if (end) pattern += '$';\n\n  let flags = caseSensitive ? undefined : 'i';\n  let matcher = new RegExp(pattern, flags);\n\n  return [matcher, keys];\n}\n\nfunction createParams(keys, values) {\n  return keys.reduce((params, key, index) => {\n    // TODO: Use decodeURIComponent here to decode values?\n    params[key] = values[index];\n    return params;\n  }, {});\n}\n\nconst trimTrailingSlashes = path => path.replace(/\\/+$/, '');\nconst normalizeSlashes = path => path.replace(/\\/\\/+/g, '/');\nconst joinPaths = paths => normalizeSlashes(paths.join('/'));\nconst splitPath = path => normalizeSlashes(path).split('/');\n\nfunction resolvePathname(toPathname, fromPathname) {\n  let segments = splitPath(trimTrailingSlashes(fromPathname));\n  let relativeSegments = splitPath(toPathname);\n\n  relativeSegments.forEach(segment => {\n    if (segment === '..') {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== '.') {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? joinPaths(segments) : '/';\n}\n\n/**\n * Returns a fully resolve location object relative to the given pathname.\n */\nexport function resolveLocation(to, fromPathname = '/') {\n  let { pathname: toPathname, search = '', hash = '' } =\n    typeof to === 'string' ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith('/')\n      ? resolvePathname(toPathname, '/')\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return { pathname, search, hash };\n}\n\n/**\n * Creates a path with params interpolated.\n */\nexport function generatePath(pathname, params = {}) {\n  return pathname\n    .replace(/:(\\w+)/g, (_, key) => params[key] || `:${key}`)\n    .replace(/\\*$/, splat => params[splat] || splat);\n}\n"],"names":["readOnly","process","env","NODE_ENV","obj","Object","invariant","cond","message","Error","LocationContext","React","RouteContext","outlet","params","pathname","route","MemoryRouter","children","initialEntries","initialIndex","timeout","historyRef","createMemoryHistory","createElement","Router","history","PropTypes","search","hash","state","key","Navigate","to","replace","useNavigate","navigate","Outlet","useOutlet","Redirect","redirectChildrenType","props","propName","from","Route","element","path","startTransition","tx","useTransition","location","setLocation","timeoutMs","pending","listeningRef","Provider","value","action","push","go","listen","block","Routes","basename","caseSensitive","routes","createRoutesFromChildren","useRoutes","redirectTo","childRoutes","useLocation","relativeTo","resolveLocation","method","useResolvedLocation","missingTrailingSplatWarnings","warnAboutMissingTrailingSplatAt","console","e","parentParams","parentPathname","parentRoute","parentPath","joinPaths","matches","matchRoutes","redirectMatch","match","test","generatePath","i","flattenedRoutes","flatRoutes","compilePath","matcher","target","index","r","keys","createParams","parsePath","base","flattenRoutes","rankFlattenedRoutes","parentRoutes","parentIndexes","indexes","paramRe","dynamicSegmentValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","computeScore","segments","initialScore","score","segment","pathScores","memo","a","b","aIndexes","aScore","bIndexes","bScore","compareIndexes","siblings","n","end","pattern","_","RegExp","undefined","values","paths","resolvePathname","toPathname","fromPathname","normalizeSlashes","relativeSegments","splat","useBlocker","blocker","when","unblock","autoUnblockingTx","retry","useHref","resolvedLocation","useMatch","useParams"],"mappings":"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"}