[{"/Users/jamescorrea/flatiron/phase-4/project/leg_up_activity_app/client/src/index.js":"1","/Users/jamescorrea/flatiron/phase-4/project/leg_up_activity_app/client/src/reportWebVitals.js":"2","/Users/jamescorrea/flatiron/phase-4/project/leg_up_activity_app/client/src/App.js":"3","/Users/jamescorrea/flatiron/phase-4/project/leg_up_activity_app/client/src/components/Header.js":"4","/Users/jamescorrea/flatiron/phase-4/project/leg_up_activity_app/client/src/components/Login.js":"5","/Users/jamescorrea/flatiron/phase-4/project/leg_up_activity_app/client/src/components/YogaForm.js":"6","/Users/jamescorrea/flatiron/phase-4/project/leg_up_activity_app/client/src/components/MeditationForm.js":"7","/Users/jamescorrea/flatiron/phase-4/project/leg_up_activity_app/client/src/components/CardioForm.js":"8","/Users/jamescorrea/flatiron/phase-4/project/leg_up_activity_app/client/src/components/SignUpForm.js":"9","/Users/jamescorrea/flatiron/phase-4/project/leg_up_activity_app/client/src/components/LoginForm.js":"10","/Users/jamescorrea/flatiron/phase-4/project/leg_up_activity_app/client/src/components/Home.js":"11","/Users/jamescorrea/flatiron/phase-4/project/leg_up_activity_app/client/src/components/TopNav.js":"12"},{"size":539,"mtime":1643239456902,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1643227346037,"results":"15","hashOfConfig":"14"},{"size":752,"mtime":1643237324110,"results":"16","hashOfConfig":"14"},{"size":250,"mtime":1643237324111,"results":"17","hashOfConfig":"14"},{"size":754,"mtime":1643237324111,"results":"18","hashOfConfig":"14"},{"size":571,"mtime":1643227346036,"results":"19","hashOfConfig":"14"},{"size":511,"mtime":1643227346035,"results":"20","hashOfConfig":"14"},{"size":641,"mtime":1643227346034,"results":"21","hashOfConfig":"14"},{"size":1370,"mtime":1643237324113,"results":"22","hashOfConfig":"14"},{"size":1743,"mtime":1643237324112,"results":"23","hashOfConfig":"14"},{"size":3996,"mtime":1643237324414,"results":"24","hashOfConfig":"14"},{"size":301,"mtime":1643239969568,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1crlj70",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jamescorrea/flatiron/phase-4/project/leg_up_activity_app/client/src/index.js",[],"/Users/jamescorrea/flatiron/phase-4/project/leg_up_activity_app/client/src/reportWebVitals.js",[],["54","55"],"/Users/jamescorrea/flatiron/phase-4/project/leg_up_activity_app/client/src/App.js",["56"],"import { useState } from 'react'\nimport { Routes, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Login from './components/Login'\nimport Home from './components/Home'\nimport TopNav from './components/TopNav'\n\n\nexport default function App () {\n  const [user, setUser] = useState()\n  const [activity, setActivity] = useState()\n\n  const header = <h1>Leg Up</h1>\n\n  return (\n    <div className='App'>\n      <TopNav />\n      <Routes>\n        <Route path=\"/\" element={<Header header={header} />} />\n        <Route path='/login' element={<Login onLogin={setUser} />} />\n        <Route\n          path='/home'\n          element={<Home activity={activity} setActivity={setActivity} />}\n        />\n      </Routes>\n    </div>\n  )\n}\n","/Users/jamescorrea/flatiron/phase-4/project/leg_up_activity_app/client/src/components/Header.js",["57"],"import React from 'react'\nimport { useNavigate } from 'react-router-dom';\n\nexport default function Header( {header} ) {\n    const navigate = useNavigate()\n\n    return(\n        <header className=\"header\">\n            {header}\n        </header>\n    )\n}","/Users/jamescorrea/flatiron/phase-4/project/leg_up_activity_app/client/src/components/Login.js",[],"/Users/jamescorrea/flatiron/phase-4/project/leg_up_activity_app/client/src/components/YogaForm.js",[],"/Users/jamescorrea/flatiron/phase-4/project/leg_up_activity_app/client/src/components/MeditationForm.js",[],"/Users/jamescorrea/flatiron/phase-4/project/leg_up_activity_app/client/src/components/CardioForm.js",[],"/Users/jamescorrea/flatiron/phase-4/project/leg_up_activity_app/client/src/components/SignUpForm.js",[],"/Users/jamescorrea/flatiron/phase-4/project/leg_up_activity_app/client/src/components/LoginForm.js",[],"/Users/jamescorrea/flatiron/phase-4/project/leg_up_activity_app/client/src/components/Home.js",["58","59"],"import { useEffect, useState } from \"react\";\nimport Select from \"react-select\";\nimport MeditationForm from \"./MeditationForm\";\nimport YogaForm from \"./YogaForm\";\nimport CardioForm from \"./CardioForm\";\n\nexport default function Main({ header, activity, setActivity }) {\n  const initialOptions = [\n    { value: \"meditation\", label: \"🧘 Meditation\" },\n    { value: \"yoga\", label: \"🤸‍♂️ Yoga\" },\n    { value: \"cardio\", label: \"🏃🏽 Cardio\" }\n    ];\n\n  const [activityOptions, setActivityOptions] = useState(initialOptions);\n  // const [meditationSessions, setMeditationSessions] = useState(false);\n  // const [yogaSessions, setYogaSessions] = useState(false);\n  // const [cardioSessions, setCardioSessions] = useState(false);\n\n  function selectActivity(e) {\n    setActivity(e.value);\n  }\n\n  // if we discover we need to fetch the activities table itself, here is the code (roughly); if not, can be deleted.\n  // useEffect(() => {\n  //   fetch(`/activities`)\n  //     .then((response) => {\n  //       if (response.ok) {\n  //         return response.json();\n  //       } else {\n  //         console.log(\"Reponse was bad\");\n  //       }\n  //     })\n  //     .then(console.log(\"attempt to fetch activities\"))\n  //     .catch((err) => {\n  //       console.log(`${err}; failed to fetch activities`);\n  //     });\n  // }, []);\n\n  function handleMeditationSubmit(e) {\n    e.preventDefault();\n    // setMeditationSessions(true)\n\n    const time = e.target.time.value;\n    const date = e.target.date.value;\n\n    fetch(\"/meditation\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        time: time,\n        date: date\n      }),\n    });\n  }\n\n  function handleYogaSubmit(e) {\n    e.preventDefault();\n    // setYogaSessions(true)\n\n    const time = e.target.time.value;\n    const type = e.target.type.value;\n    const date = e.target.date.value;\n\n    fetch(\"/yoga\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        time: time,\n        type: type,\n        date: date,\n      }),\n    });\n  }\n\n  function handleCardioSubmit(e) {\n    e.preventDefault();\n    // setCardioSessions(true)\n\n    const type = e.target.type.value;\n    const distance = e.target.distance.value;\n    const time = e.target.time.value;\n    const date = e.target.date.value;\n\n    fetch(\"/meditation\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        type: type,\n        distance: distance,\n        time: time,\n        date: date,\n      }),\n    });\n  }\n\n  function seeProgress() {\n    console.log(activity);\n    // do the route to /${activity}\n    // incorporate commented-out State for meditationSessions(true) etc, if needed to do the render.\n  }\n\n  return (\n    <div>\n      <div className=\"header\">{header}</div>\n      <div className=\"site_info\">\n        <p>\n          Down to meditate? Into yoga? Always on the move? Log your self-care\n          sessions using the menu below, and keep track of your kick-ass\n          routines as you practice.\n        </p>\n      </div>\n      <Select\n        className=\"activity_dropdown\"\n        autofocus\n        isSearchable\n        placeholder=\"Select activity\"\n        options={activityOptions}\n        onChange={selectActivity}\n      />\n      {activity === 'meditation' ? (\n        <MeditationForm\n          handleMeditationSubmit={handleMeditationSubmit}\n          activity={activity}\n          seeProgress={seeProgress}\n        />\n      ) : null}\n      {activity === 'yoga' ? (\n        <YogaForm\n          handleYogaSubmit={handleYogaSubmit}\n          activity={activity}\n          seeProgress={seeProgress}\n        />\n      ) : null}\n      {activity === 'cardio' ? (\n        <CardioForm\n          handleCardioSubmit={handleCardioSubmit}\n          activity={activity}\n          seeProgress={seeProgress}\n        />\n      ) : null}\n    </div>\n  );\n}\n","/Users/jamescorrea/flatiron/phase-4/project/leg_up_activity_app/client/src/components/TopNav.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":10,"column":10,"nodeType":"66","messageId":"67","endLine":10,"endColumn":14},{"ruleId":"64","severity":1,"message":"68","line":5,"column":11,"nodeType":"66","messageId":"67","endLine":5,"endColumn":19},{"ruleId":"64","severity":1,"message":"69","line":1,"column":10,"nodeType":"66","messageId":"67","endLine":1,"endColumn":19},{"ruleId":"64","severity":1,"message":"70","line":14,"column":27,"nodeType":"66","messageId":"67","endLine":14,"endColumn":45},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'navigate' is assigned a value but never used.","'useEffect' is defined but never used.","'setActivityOptions' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]