[{"/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/index.js":"1","/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/reportWebVitals.js":"2","/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/App.js":"3","/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/components/Login.js":"4","/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/components/LoginForm.js":"5","/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/components/SignUpForm.js":"6","/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/components/Home.js":"7","/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/components/YogaForm.js":"8","/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/components/MeditationForm.js":"9","/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/components/CardioForm.js":"10","/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/components/Header.js":"11"},{"size":542,"mtime":1643127132617,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1642703059764,"results":"14","hashOfConfig":"13"},{"size":646,"mtime":1643127373749,"results":"15","hashOfConfig":"13"},{"size":754,"mtime":1643071750317,"results":"16","hashOfConfig":"13"},{"size":0,"mtime":1643069503310,"results":"17","hashOfConfig":"13"},{"size":0,"mtime":1643069503310,"results":"18","hashOfConfig":"13"},{"size":4732,"mtime":1643126953449,"results":"19","hashOfConfig":"13"},{"size":570,"mtime":1643073779181,"results":"20","hashOfConfig":"13"},{"size":499,"mtime":1643073730644,"results":"21","hashOfConfig":"13"},{"size":639,"mtime":1643073789995,"results":"22","hashOfConfig":"13"},{"size":147,"mtime":1643125413373,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1o3qrgr",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/index.js",[],["50","51"],"/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/reportWebVitals.js",[],"/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/App.js",["52","53","54"],"/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/components/Login.js",[],"/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/components/LoginForm.js",["55"],"",["56","57"],"/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/components/SignUpForm.js",["58"],"/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/components/Home.js",["59","60","61","62"],"import { useEffect, useState } from \"react\";\nimport Select from \"react-select\";\nimport MeditationForm from \"./MeditationForm\";\nimport YogaForm from \"./YogaForm\";\nimport CardioForm from \"./CardioForm\";\nimport {useNavigate} from 'react-router-dom';\n\n\nexport default function Home({ header, activity, setActivity }) {\n  const initialOptions = [\n    { value: \"meditation\", label: \"🧘 Meditation\" },\n    { value: \"yoga\", label: \"🤸‍♂️ Yoga\" },\n    { value: \"cardio\", label: \"🏃🏽 Cardio\" },\n    { value: \"create_new\", label: \"✏️ Add your own activity!\" },\n  ];\n  const [activityOptions, setActivityOptions] = useState(initialOptions);\n  const [meditationSessions, setmeditationSessions] = useState(false)\n  const [yogaSessions, setyogaSessions] = useState(false)\n  const [cardioSessions, setcardioSessions] = useState(false)\n\n\n  function selectActivity(e) {\n    console.log(\"inside update activity function\");\n    setActivity(e.value);\n  }\n\n  useEffect(() => {\n    fetch(`/activities`)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          console.log(\"Reponse was bad\");\n        }\n      })\n      .then(console.log(\"attempt to fetch activities\"))\n      .catch((err) => {\n        console.log(`${err}; failed to fetch activities`);\n      });\n  }, []);\n\n  function handleMeditationSubmit(e) {\n    e.preventDefault();\n    setmeditationSessions(true)\n\n    const time = e.target.time.value;\n    const date = e.target.date.value;\n\n    fetch(\"/meditation\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        time: time,\n        date: date,\n      }),\n    });\n  }\n\n  function handleYogaSubmit(e) {\n    e.preventDefault();\n    setyogaSessions(true)\n\n    const time = e.target.time.value;\n    const type = e.target.type.value;\n    const date = e.target.date.value;\n\n    fetch(\"/yoga\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        time: time,\n        type: type,\n        date: date\n      }),\n    });\n  }\n\n  function handleCardioSubmit(e) {\n    e.preventDefault();\n    setcardioSessions(true)\n\n    const type = e.target.type.value;\n    const distance = e.target.distance.value;\n    const time = e.target.time.value;\n    const date = e.target.date.value;\n\n    fetch(\"/meditation\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        type: type,\n        distance: distance,\n        time: time,\n        date: date\n      }),\n    });\n  }\n\n  const history = useNavigate()\n\n  function seeProgress() {\n    console.log(activity)\n    history(`/${activity}`)\n  }\n\n  return (\n    <div>\n      <div class=\"header\">{header}</div>\n      <div class=\"site_info\">\n        <p>\n          Down to meditate? Into yoga? Always on the move? Log your self-care\n          sessions using the menu below, and keep track of your kick-ass\n          routines as you practice.\n        </p>\n      </div>\n      <Select\n        autofocus\n        className=\"activity_dropdown\"\n        isSearchable\n        placeholder=\"Select activity\"\n        onChange={selectActivity}\n        options={activityOptions}\n      />\n      {activity === \"meditation\" ? (\n        <MeditationForm handleMeditationSubmit={handleMeditationSubmit} activity={activity} seeProgress={seeProgress}/>\n      ) : null}\n      {activity === \"yoga\" ? (\n        <YogaForm handleYogaSubmit={handleYogaSubmit} activity={activity} seeProgress={seeProgress}/>\n      ) : null}\n      {activity === \"cardio\" ? (\n        <CardioForm handleCardioSubmit={handleCardioSubmit} activity={activity} seeProgress={seeProgress}/>\n      ) : null}\n    </div>\n  );\n}\n\n\n\n\n\n// Learn how to do a POST on a submit event\n// For monday: learn how to do a fetch on a click event\n// Create a form to be rendered for each activity selection..?\n// Learn how to update state upon setState if needed\n// I think setting state on submit button will re-render and re-fetch updated tables?\n\n// Back end\n// Add login database code by merging ian_practice with main\n// I think the routes we'll need for home are... /activities [:index] (GET)\n// And /activities/meditation [:create] ()\n// And /activities/yoga [:create]\n// And /activities/cardio [:create]\n\n// Goals:\n// Decide how to show and build the database entries for meditation, yoga and cardio in their own tables\n// Make a [:update] (PATCH) route, and [:destroy] (DELETE route) for these tables\n\n// code for later\n//   function customTheme(theme) {\n//       return {\n//           ...theme,\n//           colors: {\n//               ...theme.colors\n//           }\n//       }\n//   }\n\n","/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/components/YogaForm.js",[],"/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/components/MeditationForm.js",[],"/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/components/CardioForm.js",[],"/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/components/Header.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":27,"nodeType":"69","messageId":"70","endLine":1,"endColumn":36},{"ruleId":"67","severity":1,"message":"71","line":7,"column":10,"nodeType":"69","messageId":"70","endLine":7,"endColumn":14},{"ruleId":"67","severity":1,"message":"72","line":7,"column":16,"nodeType":"69","messageId":"70","endLine":7,"endColumn":23},{"ruleId":"67","severity":1,"message":"73","line":6,"column":10,"nodeType":"69","messageId":"70","endLine":6,"endColumn":16},{"ruleId":"63","replacedBy":"74"},{"ruleId":"65","replacedBy":"75"},{"ruleId":"67","severity":1,"message":"73","line":7,"column":10,"nodeType":"69","messageId":"70","endLine":7,"endColumn":16},{"ruleId":"67","severity":1,"message":"76","line":16,"column":27,"nodeType":"69","messageId":"70","endLine":16,"endColumn":45},{"ruleId":"67","severity":1,"message":"77","line":17,"column":10,"nodeType":"69","messageId":"70","endLine":17,"endColumn":28},{"ruleId":"67","severity":1,"message":"78","line":18,"column":10,"nodeType":"69","messageId":"70","endLine":18,"endColumn":22},{"ruleId":"67","severity":1,"message":"79","line":19,"column":10,"nodeType":"69","messageId":"70","endLine":19,"endColumn":24},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'errors' is assigned a value but never used.",["80"],["81"],"'setActivityOptions' is assigned a value but never used.","'meditationSessions' is assigned a value but never used.","'yogaSessions' is assigned a value but never used.","'cardioSessions' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]