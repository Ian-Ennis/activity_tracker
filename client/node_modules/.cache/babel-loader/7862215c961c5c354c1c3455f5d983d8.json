{"ast":null,"code":"var _jsxFileName = \"/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Select from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home({\n  header,\n  activity,\n  setActivity\n}) {\n  _s();\n\n  const initialOptions = [{\n    value: \"yoga\",\n    label: \"🤸‍♂️ Yoga\"\n  }, {\n    value: \"cardio\",\n    label: \"🏃🏽 Cardio\"\n  }, {\n    value: \"meditation\",\n    label: \"🧘 Meditation\"\n  }, {\n    value: \"create_new\",\n    label: \"✏️ Add your own activity!\"\n  }];\n  const [activityOptions, setActivityOptions] = useState(initialOptions);\n  useEffect(() => {\n    fetch(`/activities`).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Bad response');\n      }\n    }).then(setActivityOptions).catch(err => {\n      console.log(`failed to fetch activities`);\n    });\n  }, []);\n\n  function updateActivity(e) {\n    console.log('inside update activity function'); //   console.log(e.value)\n\n    setActivity(e.value);\n    console.log(activity);\n\n    if (activity === 'Yoga') {\n      console.log('selected activity is yoga');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [header, /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"home\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Down to meditate? Into yoga? Always on the move? Log your self-care sessions using the menu below, and keep track of your kick-ass routines as you practice. Or, add a new routine entirely. You do you!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      autofocus: true,\n      isSearchable: true,\n      placeholder: \"Select activity\" // onClick={fetchActivities()}\n      ,\n      onChange: updateActivity,\n      options: activityOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n} // Learn how to set state based on e.value\n// For monday: learn how to do a fetch on a click event\n// Create a form to be rendered for each activity selection\n// Learn how to update state upon setState if needed\n// code for later \n//   function customTheme(theme) {\n//       return {\n//           ...theme,\n//           colors: {\n//               ...theme.colors\n//           }\n//       }\n//   }\n\n_s(Home, \"7FSj4ahzJtWAKfqBBprtAbAz6/w=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/Ian/Development/code/mod4/activity_tracker/leg_up_activity_app/client/src/components/Home.js"],"names":["React","useEffect","useState","Select","Home","header","activity","setActivity","initialOptions","value","label","activityOptions","setActivityOptions","fetch","then","response","ok","json","Error","catch","err","console","log","updateActivity","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,QAAV;AAAoBC,EAAAA;AAApB,CAAd,EAAiD;AAAA;;AAC5D,QAAMC,cAAc,GAAG,CACnB;AAAEC,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GADmB,EAEnB;AAAED,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAFmB,EAGnB;AAAED,IAAAA,KAAK,EAAE,YAAT;AAAuBC,IAAAA,KAAK,EAAE;AAA9B,GAHmB,EAInB;AAAED,IAAAA,KAAK,EAAE,YAAT;AAAuBC,IAAAA,KAAK,EAAE;AAA9B,GAJmB,CAAvB;AAMA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAACM,cAAD,CAAtD;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,KAAK,CAAE,aAAF,CAAL,CACGC,IADH,CACSC,QAAD,IAAc;AAChB,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACjB,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACH,OAFG,MAEG;AACL,cAAM,IAAIC,KAAJ,CAAW,cAAX,CAAN;AACD;AACF,KAPD,EAQGJ,IARH,CAQQF,kBARR,EASGO,KATH,CASUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAa,4BAAb;AACD,KAXH;AAYD,GAbM,EAaJ,EAbI,CAAT;;AAeF,WAASC,cAAT,CAAwBC,CAAxB,EAA2B;AACvBH,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EADuB,CAEzB;;AACEf,IAAAA,WAAW,CAACiB,CAAC,CAACf,KAAH,CAAX;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYhB,QAAZ;;AAEF,QAAIA,QAAQ,KAAK,MAAjB,EAAyB;AACrBe,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACH;AACF;;AAED,sBACE;AAAA,eACGjB,MADH,eAEE;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eASE,QAAC,MAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,YAAY,MAFd;AAGE,MAAA,WAAW,EAAC,iBAHd,CAIE;AAJF;AAKE,MAAA,QAAQ,EAAEkB,cALZ;AAME,MAAA,OAAO,EAAEZ;AANX;AAAA;AAAA;AAAA;AAAA,YATF,eAiBE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,C,CAED;AACA;AACA;AACA;AAGA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GA1EsBP,I;;KAAAA,I","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Select from \"react-select\";\n\nexport default function Home({ header, activity, setActivity }) {\n    const initialOptions = [\n        { value: \"yoga\", label: \"🤸‍♂️ Yoga\" },\n        { value: \"cardio\", label: \"🏃🏽 Cardio\" },\n        { value: \"meditation\", label: \"🧘 Meditation\" },\n        { value: \"create_new\", label: \"✏️ Add your own activity!\" },\n    ];\n    const [activityOptions, setActivityOptions] = useState(initialOptions);\n\n    useEffect(() => {\n        fetch(`/activities`)\n          .then((response) => {\n              if (response.ok) {\n              return response.json();\n          } else {\n            throw new Error ('Bad response');\n          }\n        })\n          .then(setActivityOptions)\n          .catch((err) => {\n            console.log(`failed to fetch activities`);\n          });\n      }, []);\n\n  function updateActivity(e) {\n      console.log('inside update activity function')\n    //   console.log(e.value)\n      setActivity(e.value)\n      console.log(activity)\n\n    if (activity === 'Yoga') {\n        console.log('selected activity is yoga')\n    }\n  }\n\n  return (\n    <div>\n      {header}\n      <div class=\"home\">\n        <p>\n          Down to meditate? Into yoga? Always on the move? Log your self-care\n          sessions using the menu below, and keep track of your kick-ass\n          routines as you practice. Or, add a new routine entirely. You do you!\n        </p>\n      </div>\n      <Select\n        autofocus\n        isSearchable\n        placeholder=\"Select activity\"\n        // onClick={fetchActivities()}\n        onChange={updateActivity}\n        options={activityOptions}\n      />\n      <div>\n        <form></form>\n      </div>\n    </div>\n  );\n}\n\n// Learn how to set state based on e.value\n// For monday: learn how to do a fetch on a click event\n// Create a form to be rendered for each activity selection\n// Learn how to update state upon setState if needed\n\n\n// code for later \n  //   function customTheme(theme) {\n  //       return {\n  //           ...theme,\n  //           colors: {\n  //               ...theme.colors\n  //           }\n  //       }\n  //   }"]},"metadata":{},"sourceType":"module"}