{"ast":null,"code":"var _jsxFileName = \"/Users/kmonkey84/Development/code/phase4/project/leg_up_activity_app/client/src/components/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = 'http://localhost:3000/api/v1';\nexport default function LoginForm({\n  onLogin\n}) {\n  _s();\n\n  const [loginUser, setLoginUser] = useState('');\n  const [loginPassword, setLoginPassword] = useState('');\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const loginData = {\n      user: {\n        username: loginUser,\n        password: loginPassword\n      }\n    };\n    fetch(`${API}/login`, {\n      method: 'POST',\n      headers: {\n        Accepts: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(login)\n    }).then(r => {\n      setIsLoading(false);\n\n      if (r.ok) {\n        r.json().then(user => onLogin(user));\n      } else {\n        r.json().then(err => setErrors(err.errors));\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"username\",\n      children: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\",\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: isLoading ? 'Loading...' : 'Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"q0rKIlecz6wX8ltZ3WKYLUQ6Cy0=\");\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/kmonkey84/Development/code/phase4/project/leg_up_activity_app/client/src/components/LoginForm.js"],"names":["React","useState","API","LoginForm","onLogin","loginUser","setLoginUser","loginPassword","setLoginPassword","handleSubmit","e","preventDefault","loginData","user","username","password","fetch","method","headers","Accepts","body","JSON","stringify","login","then","r","setIsLoading","ok","json","err","setErrors","errors","setUsername","target","value","setPassword","isLoading"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AACA,MAAMC,GAAG,GAAG,8BAAZ;AAEA,eAAe,SAASC,SAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAiC;AAAA;;AAC9C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;;AAEA,WAASQ,YAAT,CAAuBC,CAAvB,EAA0B;AACxBA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,SAAS,GAAG;AAChBC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,QAAQ,EAAET,SAAZ;AAAuBU,QAAAA,QAAQ,EAAER;AAAjC;AADU,KAAlB;AAIAS,IAAAA,KAAK,CAAE,GAAEd,GAAI,QAAR,EAAiB;AACpBe,MAAAA,MAAM,EAAE,MADY;AAEpBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,OAAO,EAAE,kBADF;AAEP,wBAAgB;AAFT,OAFW;AAMpBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeC,KAAf;AANc,KAAjB,CAAL,CAOGC,IAPH,CAOQC,CAAC,IAAI;AACXC,MAAAA,YAAY,CAAC,KAAD,CAAZ;;AACA,UAAID,CAAC,CAACE,EAAN,EAAU;AACRF,QAAAA,CAAC,CAACG,IAAF,GAASJ,IAAT,CAAcX,IAAI,IAAIT,OAAO,CAACS,IAAD,CAA7B;AACD,OAFD,MAEO;AACLY,QAAAA,CAAC,CAACG,IAAF,GAASJ,IAAT,CAAcK,GAAG,IAAIC,SAAS,CAACD,GAAG,CAACE,MAAL,CAA9B;AACD;AACF,KAdD;AAeD;;AAED,sBACE;AAAM,IAAA,QAAQ,EAAEtB,YAAhB;AAAA,4BACE;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,UAFL;AAGE,MAAA,KAAK,EAAEK,QAHT;AAIE,MAAA,QAAQ,EAAEJ,CAAC,IAAIsB,WAAW,CAACtB,CAAC,CAACuB,MAAF,CAASC,KAAV;AAJ5B;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,EAAE,EAAC,UAFL;AAGE,MAAA,KAAK,EAAEnB,QAHT;AAIE,MAAA,QAAQ,EAAEL,CAAC,IAAIyB,WAAW,CAACzB,CAAC,CAACuB,MAAF,CAASC,KAAV;AAJ5B;AAAA;AAAA;AAAA;AAAA,YATF,eAeE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA,gBAAuBE,SAAS,GAAG,YAAH,GAAkB;AAAlD;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA/CuBjC,S;;KAAAA,S","sourcesContent":["import React, { useState } from 'react'\nconst API = 'http://localhost:3000/api/v1';\n\nexport default function LoginForm ({ onLogin }) {\n  const [loginUser, setLoginUser] = useState('')\n  const [loginPassword, setLoginPassword] = useState('')\n\n  function handleSubmit (e) {\n    e.preventDefault()\n\n    const loginData = {\n      user: { username: loginUser, password: loginPassword }\n    };\n\n    fetch(`${API}/login`, {\n      method: 'POST',\n      headers: {\n        Accepts: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(login)\n    }).then(r => {\n      setIsLoading(false)\n      if (r.ok) {\n        r.json().then(user => onLogin(user))\n      } else {\n        r.json().then(err => setErrors(err.errors))\n      }\n    })\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor='username'>Username</label>\n      <input\n        type='text'\n        id='username'\n        value={username}\n        onChange={e => setUsername(e.target.value)}\n      />\n      <label htmlFor='password'>Password</label>\n      <input\n        type='password'\n        id='password'\n        value={password}\n        onChange={e => setPassword(e.target.value)}\n      />\n      <button type='submit'>{isLoading ? 'Loading...' : 'Login'}</button>\n    </form>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}