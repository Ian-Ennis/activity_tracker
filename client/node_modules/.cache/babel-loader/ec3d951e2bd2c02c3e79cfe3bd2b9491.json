{"ast":null,"code":"var _jsxFileName = \"/Users/kmonkey84/Development/code/phase4/project/leg_up_activity_app/client/src/components/SignUpForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUpForm({\n  onLogin\n}) {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false); // \n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setErrors([]);\n    setIsLoading(true);\n    fetch('https://localhost:3000/api/v1/users', {\n      method: 'POST',\n      headers: {\n        Accepts: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          username,\n          password,\n          email\n        }\n      })\n    }).then(r => {\n      setIsLoading(false);\n\n      if (r.ok) {\n        r.json().then(user => onLogin(user));\n      } else {\n        r.json().then(err => setErrors(err.errors));\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"username\",\n      children: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\",\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: isLoading ? 'Loading...' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUpForm, \"fa0TCv8f9OIyqTfLbfCWEZ+S8Bk=\");\n\n_c = SignUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"sources":["/Users/kmonkey84/Development/code/phase4/project/leg_up_activity_app/client/src/components/SignUpForm.js"],"names":["React","useState","SignUpForm","onLogin","username","setUsername","password","setPassword","email","setEmail","errors","setErrors","isLoading","setIsLoading","handleSubmit","e","preventDefault","fetch","method","headers","Accepts","body","JSON","stringify","user","then","r","ok","json","err","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nexport default function SignUpForm ({ onLogin }) {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [email, setEmail] = useState('')\n  const [errors, setErrors] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n  // \n\n  function handleSubmit (e) {\n    e.preventDefault()\n    setErrors([])\n    setIsLoading(true)\n    fetch('https://localhost:3000/api/v1/users', {\n      method: 'POST',\n      headers: {\n        Accepts: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({user: {\n        username,\n        password,\n        email\n      }\n      }),\n    }).then(r => {\n      setIsLoading(false)\n      if (r.ok) {\n        r.json().then(user => onLogin(user))\n      } else {\n        r.json().then(err => setErrors(err.errors))\n      }\n    })\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor='username'>Username</label>\n      <input\n        type='text'\n        id='username'\n        value={username}\n        onChange={e => setUsername(e.target.value)}\n      />\n      <label htmlFor='password'>Password</label>\n      <input\n        type='password'\n        id='password'\n        value={password}\n        onChange={e => setPassword(e.target.value)}\n      />\n      <label htmlFor='email'>Email</label>\n      <input\n        type='text'\n        id='email'\n        value={email}\n        onChange={e => setEmail(e.target.value)}\n      />\n      <button type='submit'>{isLoading ? 'Loading...' : 'Sign Up'}</button>\n    </form>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}