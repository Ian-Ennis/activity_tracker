{"version":3,"file":"history.js","sources":["../../packages/history/modules/index.js"],"sourcesContent":["const PopAction = 'POP';\nconst PushAction = 'PUSH';\nconst ReplaceAction = 'REPLACE';\n\nconst BeforeUnloadEventType = 'beforeunload';\nconst HashChangeEventType = 'hashchange';\nconst PopStateEventType = 'popstate';\n\nconst readOnly = __DEV__ ? obj => Object.freeze(obj) : obj => obj;\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== 'undefined') console.warn(message);\n\n    try {\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// BROWSER\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Browser history stores the location in regular URLs. This is the\n * standard for most web apps, but it requires some configuration on\n * the server to ensure you serve the same app at multiple URLs.\n */\nexport function createBrowserHistory({ window = document.defaultView } = {}) {\n  let globalHistory = window.history;\n\n  function getIndexAndLocation() {\n    let { pathname, search, hash } = window.location;\n    let state = globalHistory.state || {};\n    return [\n      state.idx,\n      readOnly({\n        pathname,\n        search,\n        hash,\n        state: state.usr || null,\n        key: state.key || 'default'\n      })\n    ];\n  }\n\n  let blockedPopTx = null;\n  function handlePop() {\n    if (blockedPopTx) {\n      blockers.call(blockedPopTx);\n      blockedPopTx = null;\n    } else {\n      let nextAction = PopAction;\n      let [nextIndex, nextLocation] = getIndexAndLocation();\n\n      if (blockers.length) {\n        if (nextIndex != null) {\n          let n = index - nextIndex;\n          if (n) {\n            // Revert the POP\n            blockedPopTx = {\n              action: nextAction,\n              location: nextLocation,\n              retry() {\n                go(n * -1);\n              }\n            };\n\n            go(n);\n          }\n        } else {\n          // Trying to POP to a location with no index. We did not create\n          // this location, so we can't effectively block the navigation.\n          warning(\n            false,\n            // TODO: Write up a doc that explains our blocking strategy in\n            // detail and link to it here so people can understand better\n            // what is going on and how to avoid it.\n            `You are trying to block a POP navigation to a location that was not ` +\n              `created by the history library. The block will fail silently in ` +\n              `production, but in general you should do all navigation with the ` +\n              `history library (instead of using window.history.pushState directly) ` +\n              `to avoid this situation.`\n          );\n        }\n      } else {\n        applyTx(nextAction);\n      }\n    }\n  }\n\n  window.addEventListener(PopStateEventType, handlePop);\n\n  let action = PopAction;\n  let [index, location] = getIndexAndLocation();\n  let blockers = createEvents();\n  let listeners = createEvents();\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, null);\n  }\n\n  function createHref(to) {\n    return typeof to === 'string' ? to : createPath(to);\n  }\n\n  function getNextLocation(to, state = null) {\n    return readOnly({\n      ...location,\n      ...(typeof to === 'string' ? parsePath(to) : to),\n      state,\n      key: createKey()\n    });\n  }\n\n  function getHistoryStateAndUrl(nextLocation, index) {\n    return [\n      {\n        usr: nextLocation.state,\n        key: nextLocation.key,\n        idx: index\n      },\n      createHref(nextLocation)\n    ];\n  }\n\n  function allowTx(action, location, retry) {\n    return (\n      !blockers.length || (blockers.call({ action, location, retry }), false)\n    );\n  }\n\n  function applyTx(nextAction) {\n    action = nextAction;\n    [index, location] = getIndexAndLocation();\n    listeners.call({ action, location });\n  }\n\n  function push(to, state) {\n    let nextAction = PushAction;\n    let nextLocation = getNextLocation(to, state);\n    function retry() {\n      push(to, state);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      let [historyState, url] = getHistoryStateAndUrl(nextLocation, index + 1);\n\n      // TODO: Support forced reloading\n      // try...catch because iOS limits us to 100 pushState calls :/\n      try {\n        globalHistory.pushState(historyState, null, url);\n      } catch (error) {\n        // They are going to lose state here, but there is no real\n        // way to warn them about it since the page will refresh...\n        window.location.assign(url);\n      }\n\n      applyTx(nextAction);\n    }\n  }\n\n  function replace(to, state) {\n    let nextAction = ReplaceAction;\n    let nextLocation = getNextLocation(to, state);\n    function retry() {\n      replace(to, state);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      let [historyState, url] = getHistoryStateAndUrl(nextLocation, index);\n\n      // TODO: Support forced reloading\n      globalHistory.replaceState(historyState, null, url);\n\n      applyTx(nextAction);\n    }\n  }\n\n  function go(n) {\n    globalHistory.go(n);\n  }\n\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return location;\n    },\n    createHref,\n    push,\n    replace,\n    go,\n    back() {\n      go(-1);\n    },\n    forward() {\n      go(1);\n    },\n    listen(fn) {\n      return listeners.push(fn);\n    },\n    block(fn) {\n      let unblock = blockers.push(fn);\n\n      if (blockers.length === 1) {\n        window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);\n      }\n\n      return function() {\n        unblock();\n\n        // Remove the beforeunload listener so the document may\n        // still be salvageable in the pagehide event.\n        // See https://html.spec.whatwg.org/#unloading-documents\n        if (!blockers.length) {\n          window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);\n        }\n      };\n    }\n  };\n\n  return history;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// HASH\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Hash history stores the location in window.location.hash. This makes\n * it ideal for situations where you don't want to send the location to\n * the server for some reason, either because you do cannot configure it\n * or the URL space is reserved for something else.\n */\nexport function createHashHistory({ window = document.defaultView } = {}) {\n  let globalHistory = window.history;\n\n  function getIndexAndLocation() {\n    let { pathname = '/', search = '', hash = '' } = parsePath(\n      window.location.hash.substr(1)\n    );\n    let state = globalHistory.state || {};\n    return [\n      state.idx,\n      readOnly({\n        pathname,\n        search,\n        hash,\n        state: state.usr || null,\n        key: state.key || 'default'\n      })\n    ];\n  }\n\n  let blockedPopTx = null;\n  function handlePop() {\n    if (blockedPopTx) {\n      blockers.call(blockedPopTx);\n      blockedPopTx = null;\n    } else {\n      let nextAction = PopAction;\n      let [nextIndex, nextLocation] = getIndexAndLocation();\n\n      if (blockers.length) {\n        if (nextIndex != null) {\n          let n = index - nextIndex;\n          if (n) {\n            // Revert the POP\n            blockedPopTx = {\n              action: nextAction,\n              location: nextLocation,\n              retry() {\n                go(n * -1);\n              }\n            };\n\n            go(n);\n          }\n        } else {\n          // Trying to POP to a location with no index. We did not create\n          // this location, so we can't effectively block the navigation.\n          warning(\n            false,\n            // TODO: Write up a doc that explains our blocking strategy in\n            // detail and link to it here so people can understand better\n            // what is going on and how to avoid it.\n            `You are trying to block a POP navigation to a location that was not ` +\n              `created by the history library. The block will fail silently in ` +\n              `production, but in general you should do all navigation with the ` +\n              `history library (instead of using window.history.pushState directly) ` +\n              `to avoid this situation.`\n          );\n        }\n      } else {\n        applyTx(nextAction);\n      }\n    }\n  }\n\n  window.addEventListener(PopStateEventType, handlePop);\n\n  // TODO: Is this still necessary? Which browsers do\n  // not trigger popstate when the hash changes?\n  window.addEventListener(HashChangeEventType, event => {\n    let [, nextLocation] = getIndexAndLocation();\n\n    // Ignore extraneous hashchange events.\n    if (createPath(nextLocation) !== createPath(location)) {\n      handlePop();\n    }\n  });\n\n  let action = PopAction;\n  let [index, location] = getIndexAndLocation();\n  let blockers = createEvents();\n  let listeners = createEvents();\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, null);\n  }\n\n  function getBaseHref() {\n    let base = document.querySelector('base');\n    let href = '';\n\n    if (base && base.getAttribute('href')) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf('#');\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href;\n  }\n\n  function createHref(to) {\n    return getBaseHref() + '#' + (typeof to === 'string' ? to : createPath(to));\n  }\n\n  function getNextLocation(to, state = null) {\n    return readOnly({\n      ...location,\n      ...(typeof to === 'string' ? parsePath(to) : to),\n      state,\n      key: createKey()\n    });\n  }\n\n  function getHistoryStateAndUrl(nextLocation, index) {\n    return [\n      {\n        usr: nextLocation.state,\n        key: nextLocation.key,\n        idx: index\n      },\n      createHref(nextLocation)\n    ];\n  }\n\n  function allowTx(action, location, retry) {\n    return (\n      !blockers.length || (blockers.call({ action, location, retry }), false)\n    );\n  }\n\n  function applyTx(nextAction) {\n    action = nextAction;\n    [index, location] = getIndexAndLocation();\n    listeners.call({ action, location });\n  }\n\n  function push(to, state) {\n    let nextAction = PushAction;\n    let nextLocation = getNextLocation(to, state);\n    function retry() {\n      push(to, state);\n    }\n\n    warning(\n      nextLocation.pathname.charAt(0) === '/',\n      `Relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      let [historyState, url] = getHistoryStateAndUrl(nextLocation, index + 1);\n\n      // TODO: Support forced reloading\n      // try...catch because iOS limits us to 100 pushState calls :/\n      try {\n        globalHistory.pushState(historyState, null, url);\n      } catch (error) {\n        // They are going to lose state here, but there is no real\n        // way to warn them about it since the page will refresh...\n        window.location.assign(url);\n      }\n\n      applyTx(nextAction);\n    }\n  }\n\n  function replace(to, state) {\n    let nextAction = ReplaceAction;\n    let nextLocation = getNextLocation(to, state);\n    function retry() {\n      replace(to, state);\n    }\n\n    warning(\n      nextLocation.pathname.charAt(0) === '/',\n      `Relative pathnames are not supported in hash history.replace(${JSON.stringify(\n        to\n      )})`\n    );\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      let [historyState, url] = getHistoryStateAndUrl(nextLocation, index);\n\n      // TODO: Support forced reloading\n      globalHistory.replaceState(historyState, null, url);\n\n      applyTx(nextAction);\n    }\n  }\n\n  function go(n) {\n    globalHistory.go(n);\n  }\n\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return location;\n    },\n    createHref,\n    push,\n    replace,\n    go,\n    back() {\n      go(-1);\n    },\n    forward() {\n      go(1);\n    },\n    listen(fn) {\n      return listeners.push(fn);\n    },\n    block(fn) {\n      let unblock = blockers.push(fn);\n\n      if (blockers.length === 1) {\n        window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);\n      }\n\n      return function() {\n        unblock();\n\n        // Remove the beforeunload listener so the document may\n        // still be salvageable in the pagehide event.\n        // See https://html.spec.whatwg.org/#unloading-documents\n        if (!blockers.length) {\n          window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);\n        }\n      };\n    }\n  };\n\n  return history;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// MEMORY\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Memory history stores the current location in memory. It is designed\n * for use in stateful non-browser environments like headless tests (in\n * node.js) and React Native.\n */\nexport function createMemoryHistory({\n  initialEntries = ['/'],\n  initialIndex = 0\n} = {}) {\n  let entries = initialEntries.map(entry => {\n    let location = readOnly({\n      pathname: '/',\n      search: '',\n      hash: '',\n      state: null,\n      key: createKey(),\n      ...(typeof entry === 'string' ? parsePath(entry) : entry)\n    });\n\n    warning(\n      location.pathname.charAt(0) === '/',\n      `Relative pathnames are not supported in createMemoryHistory({ initialEntries }) (invalid entry: ${JSON.stringify(\n        entry\n      )})`\n    );\n\n    return location;\n  });\n  let index = clamp(initialIndex, 0, entries.length - 1);\n\n  let action = PopAction;\n  let location = entries[index];\n  let blockers = createEvents();\n  let listeners = createEvents();\n\n  function createHref(to) {\n    return typeof to === 'string' ? to : createPath(to);\n  }\n\n  function getNextLocation(to, state = null) {\n    return readOnly({\n      ...location,\n      ...(typeof to === 'string' ? parsePath(to) : to),\n      state,\n      key: createKey()\n    });\n  }\n\n  function allowTx(action, location, retry) {\n    return (\n      !blockers.length || (blockers.call({ action, location, retry }), false)\n    );\n  }\n\n  function applyTx(nextAction, nextLocation) {\n    action = nextAction;\n    location = nextLocation;\n    listeners.call({ action, location });\n  }\n\n  function push(to, state) {\n    let nextAction = PushAction;\n    let nextLocation = getNextLocation(to, state);\n    function retry() {\n      push(to, state);\n    }\n\n    warning(\n      location.pathname.charAt(0) === '/',\n      `Relative pathnames are not supported in memory history.push(${JSON.stringify(\n        to\n      )})`\n    );\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  function replace(to, state) {\n    let nextAction = ReplaceAction;\n    let nextLocation = getNextLocation(to, state);\n    function retry() {\n      replace(to, state);\n    }\n\n    warning(\n      location.pathname.charAt(0) === '/',\n      `Relative pathnames are not supported in memory history.replace(${JSON.stringify(\n        to\n      )})`\n    );\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      entries[index] = nextLocation;\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  function go(n) {\n    let nextIndex = clamp(index + n, 0, entries.length - 1);\n    let nextAction = PopAction;\n    let nextLocation = entries[nextIndex];\n    function retry() {\n      go(n);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      index = nextIndex;\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return location;\n    },\n    createHref,\n    push,\n    replace,\n    go,\n    back() {\n      go(-1);\n    },\n    forward() {\n      go(1);\n    },\n    listen(fn) {\n      return listeners.push(fn);\n    },\n    block(fn) {\n      return blockers.push(fn);\n    }\n  };\n\n  return history;\n}\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// UTILS\n////////////////////////////////////////////////////////////////////////////////\n\nfunction promptBeforeUnload(event) {\n  // Cancel the event.\n  event.preventDefault();\n  // Chrome (and legacy IE) requires returnValue to be set.\n  event.returnValue = '';\n}\n\nfunction createEvents() {\n  let handlers = [];\n\n  return {\n    get length() {\n      return handlers.length;\n    },\n    push(fn) {\n      handlers.push(fn);\n      return function() {\n        handlers = handlers.filter(handler => handler !== fn);\n      };\n    },\n    call(arg) {\n      handlers.forEach(fn => fn && fn(arg));\n    }\n  };\n}\n\nfunction createKey() {\n  return Math.random()\n    .toString(36)\n    .substr(2, 8);\n}\n\nexport function createPath({ pathname = '/', search = '', hash = '' }) {\n  return pathname + search + hash;\n}\n\nexport function parsePath(path) {\n  let pieces = {};\n\n  if (path) {\n    let hashIndex = path.indexOf('#');\n    if (hashIndex >= 0) {\n      pieces.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf('?');\n    if (searchIndex >= 0) {\n      pieces.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      pieces.pathname = path;\n    }\n  }\n\n  return pieces;\n}\n"],"names":["readOnly","process","env","NODE_ENV","obj","Object","warning","cond","message","console","Error","e","promptBeforeUnload","event","createEvents","handlers","length","push","fn","handler","call","arg","createKey","Math","createPath","parsePath","path","pieces","hashIndex","searchIndex","createBrowserHistory","getIndexAndLocation","window","state","globalHistory","pathname","search","hash","key","createHref","to","getNextLocation","location","applyTx","nextAction","action","index","listeners","retry","nextLocation","blockers","PushAction","usr","idx","historyState","url","error","replace","ReplaceAction","go","n","document","blockedPopTx","PopStateEventType","nextIndex","PopAction","history","back","forward","listen","block","unblock","BeforeUnloadEventType","createHashHistory","handlePop","base","href","JSON","HashChangeEventType","createMemoryHistory","allowTx","entries","lowerBound","initialIndex","initialEntries","entry"],"mappings":"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"}